/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   NB_64x16b
 *      Instance Name:  nb_64x16b
 *      Words:          64
 *      Word Width:     16
 *      Mux:            1
 *      Corner:        ff_1p1v_125c
 *
 *      Creation Date:  Thu Nov 19 22:33:57 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(NB_64x16b) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Thu Nov 19 22:33:57 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : 125.000;
  nom_voltage         : 1.100;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 0.46;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 1.1);
  voltage_map (VDDCE, 1.1);
  voltage_map (VSSE, 0);

  operating_conditions(ff_1p1v_125c) {
    process      : 1;
    temperature  : 125.000;
    voltage      : 1.100;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ff_1p1v_125c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(nb_64x16b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (nb_64x16b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 16;
    bit_from : 15;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x16b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x16b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 6;
    bit_from : 5;
    bit_to : 0 ;
    downto : true ;
  }
  cell(nb_64x16b) {
    area : 9609.800200;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 6;
      word_width : 16;
    }
    bus(Q) {
      bus_type : nb_64x16b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.310075, 0.314963, 0.320296, 0.330961, 0.362955, 0.416280, 0.469604", \
              "0.309864, 0.314752, 0.320085, 0.330750, 0.362744, 0.416069, 0.469393", \
              "0.309302, 0.314190, 0.319523, 0.330187, 0.362182, 0.415507, 0.468831", \
              "0.308318, 0.313206, 0.318539, 0.329203, 0.361198, 0.414523, 0.467847", \
              "0.304874, 0.309762, 0.315094, 0.325759, 0.357754, 0.411078, 0.464403", \
              "0.296439, 0.301327, 0.306660, 0.317325, 0.349319, 0.402644, 0.455968", \
              "0.280273, 0.285161, 0.290494, 0.301158, 0.333153, 0.386478, 0.439802" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.320260, 0.325138, 0.330459, 0.341102, 0.373029, 0.426241, 0.479453", \
              "0.320049, 0.324927, 0.330248, 0.340891, 0.372818, 0.426030, 0.479242", \
              "0.319487, 0.324365, 0.329686, 0.340328, 0.372256, 0.425468, 0.478680", \
              "0.318503, 0.323381, 0.328702, 0.339344, 0.371272, 0.424484, 0.477696", \
              "0.315059, 0.319937, 0.325258, 0.335900, 0.367827, 0.421039, 0.474251", \
              "0.306624, 0.311502, 0.316823, 0.327466, 0.359393, 0.412605, 0.465817", \
              "0.290458, 0.295336, 0.300657, 0.311299, 0.343227, 0.396439, 0.449651" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.349026, 0.353914, 0.359246, 0.369911, 0.401906, 0.455230, 0.508555", \
              "0.348815, 0.353703, 0.359035, 0.369700, 0.401695, 0.455019, 0.508344", \
              "0.348252, 0.353140, 0.358473, 0.369138, 0.401132, 0.454457, 0.507781", \
              "0.347268, 0.352156, 0.357489, 0.368154, 0.400148, 0.453473, 0.506797", \
              "0.343824, 0.348712, 0.354045, 0.364710, 0.396704, 0.450029, 0.503353", \
              "0.335390, 0.340278, 0.345610, 0.356275, 0.388270, 0.441594, 0.494919", \
              "0.319223, 0.324111, 0.329444, 0.340109, 0.372103, 0.425428, 0.478752" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.359210, 0.364088, 0.369409, 0.380052, 0.411979, 0.465191, 0.518403", \
              "0.359000, 0.363877, 0.369199, 0.379841, 0.411768, 0.464980, 0.518192", \
              "0.358437, 0.363315, 0.368636, 0.379279, 0.411206, 0.464418, 0.517630", \
              "0.357453, 0.362331, 0.367652, 0.378295, 0.410222, 0.463434, 0.516646", \
              "0.354009, 0.358887, 0.364208, 0.374851, 0.406778, 0.459990, 0.513202", \
              "0.345575, 0.350452, 0.355774, 0.366416, 0.398343, 0.451555, 0.504767", \
              "0.329408, 0.334286, 0.339607, 0.350250, 0.382177, 0.435389, 0.488601" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.420524, 0.425412, 0.430745, 0.441410, 0.473404, 0.526729, 0.580053", \
              "0.420313, 0.425201, 0.430534, 0.441199, 0.473193, 0.526518, 0.579842", \
              "0.419751, 0.424639, 0.429971, 0.440636, 0.472631, 0.525956, 0.579280", \
              "0.418767, 0.423655, 0.428987, 0.439652, 0.471647, 0.524971, 0.578296", \
              "0.415323, 0.420211, 0.425543, 0.436208, 0.468203, 0.521527, 0.574852", \
              "0.406888, 0.411776, 0.417109, 0.427774, 0.459768, 0.513093, 0.566417", \
              "0.390722, 0.395610, 0.400942, 0.411607, 0.443602, 0.496926, 0.550251" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.430709, 0.435587, 0.440908, 0.451550, 0.483478, 0.536690, 0.589902", \
              "0.430498, 0.435376, 0.440697, 0.451340, 0.483267, 0.536479, 0.589691", \
              "0.429936, 0.434814, 0.440135, 0.450777, 0.482704, 0.535917, 0.589129", \
              "0.428952, 0.433830, 0.439151, 0.449793, 0.481720, 0.534932, 0.588144", \
              "0.425508, 0.430386, 0.435707, 0.446349, 0.478276, 0.531488, 0.584700", \
              "0.417073, 0.421951, 0.427272, 0.437915, 0.469842, 0.523054, 0.576266", \
              "0.400907, 0.405785, 0.411106, 0.421748, 0.453675, 0.506887, 0.560099" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.457925, 0.462813, 0.468145, 0.478810, 0.510805, 0.564129, 0.617454", \
              "0.457714, 0.462602, 0.467935, 0.478599, 0.510594, 0.563919, 0.617243", \
              "0.457152, 0.462040, 0.467372, 0.478037, 0.510032, 0.563356, 0.616681", \
              "0.456168, 0.461056, 0.466388, 0.477053, 0.509048, 0.562372, 0.615697", \
              "0.452724, 0.457612, 0.462944, 0.473609, 0.505604, 0.558928, 0.612253", \
              "0.444289, 0.449177, 0.454509, 0.465174, 0.497169, 0.550493, 0.603818", \
              "0.428123, 0.433011, 0.438343, 0.449008, 0.481003, 0.534327, 0.587652" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.468110, 0.472988, 0.478309, 0.488951, 0.520878, 0.574090, 0.627302", \
              "0.467899, 0.472777, 0.478098, 0.488740, 0.520668, 0.573880, 0.627092", \
              "0.467337, 0.472214, 0.477536, 0.488178, 0.520105, 0.573317, 0.626529", \
              "0.466353, 0.471230, 0.476552, 0.487194, 0.519121, 0.572333, 0.625545", \
              "0.462908, 0.467786, 0.473107, 0.483750, 0.515677, 0.568889, 0.622101", \
              "0.454474, 0.459352, 0.464673, 0.475315, 0.507242, 0.560454, 0.613666", \
              "0.438308, 0.443185, 0.448507, 0.459149, 0.491076, 0.544288, 0.597500" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.128001, 0.132889, 0.138222, 0.148886, 0.180881, 0.234206, 0.287530", \
              "0.128123, 0.133012, 0.138344, 0.149009, 0.181004, 0.234328, 0.287652", \
              "0.128450, 0.133338, 0.138670, 0.149335, 0.181330, 0.234654, 0.287979", \
              "0.129021, 0.133909, 0.139242, 0.149906, 0.181901, 0.235226, 0.288550", \
              "0.131020, 0.135908, 0.141241, 0.151906, 0.183900, 0.237225, 0.290549", \
              "0.135916, 0.140804, 0.146137, 0.156802, 0.188796, 0.242121, 0.295445", \
              "0.145300, 0.150188, 0.155520, 0.166185, 0.198180, 0.251504, 0.304829" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(nb_64x16b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.001283, 0.009946, 0.021826, 0.045585, 0.116865, 0.235665, 0.354465");
          }
          fall_power(nb_64x16b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.033559, 0.033528, 0.033495, 0.033428, 0.033226, 0.032890, 0.032573");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012440;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.028 ;
      min_pulse_width_low : 0.077 ;
      min_period : 0.318 ;
      minimum_period() {
        constraint : 0.318 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.386 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 0.549 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.601 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("4.720916, 4.720916, 4.720916, 4.720916, 4.720916, 4.720916, 4.720916");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.041186, 0.041186, 0.041186, 0.041186, 0.041186, 0.041186, 0.041186");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("4.899134, 4.899134, 4.899134, 4.899134, 4.899134, 4.899134, 4.899134");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.061768, 0.061768, 0.061768, 0.061768, 0.061768, 0.061768, 0.061768");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("5.149580, 5.149580, 5.149580, 5.149580, 5.149580, 5.149580, 5.149580");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.036189, 0.036189, 0.036189, 0.036189, 0.036189, 0.036189, 0.036189");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("5.428570, 5.428570, 5.428570, 5.428570, 5.428570, 5.428570, 5.428570");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.034236, 0.034236, 0.034236, 0.034236, 0.034236, 0.034236, 0.034236");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("5.312403, 5.312403, 5.312403, 5.312403, 5.312403, 5.312403, 5.312403");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.029013, 0.029013, 0.029013, 0.029013, 0.029013, 0.029013, 0.029013");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("5.020025, 5.020025, 5.020025, 5.020025, 5.020025, 5.020025, 5.020025");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.025454, 0.025454, 0.025454, 0.025454, 0.025454, 0.025454, 0.025454");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("5.102612, 5.102612, 5.102612, 5.102612, 5.102612, 5.102612, 5.102612");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.025569, 0.025569, 0.025569, 0.025569, 0.025569, 0.025569, 0.025569");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("5.335851, 5.335851, 5.335851, 5.335851, 5.335851, 5.335851, 5.335851");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026054, 0.026054, 0.026054, 0.026054, 0.026054, 0.026054, 0.026054");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.653894, 3.653894, 3.653894, 3.653894, 3.653894, 3.653894, 3.653894");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.076192, 0.076192, 0.076192, 0.076192, 0.076192, 0.076192, 0.076192");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.699721, 3.699721, 3.699721, 3.699721, 3.699721, 3.699721, 3.699721");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.056336, 0.056336, 0.056336, 0.056336, 0.056336, 0.056336, 0.056336");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.687914, 3.687914, 3.687914, 3.687914, 3.687914, 3.687914, 3.687914");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.082016, 0.082016, 0.082016, 0.082016, 0.082016, 0.082016, 0.082016");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.731491, 3.731491, 3.731491, 3.731491, 3.731491, 3.731491, 3.731491");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.083984, 0.083984, 0.083984, 0.083984, 0.083984, 0.083984, 0.083984");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.734350, 3.734350, 3.734350, 3.734350, 3.734350, 3.734350, 3.734350");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.089218, 0.089218, 0.089218, 0.089218, 0.089218, 0.089218, 0.089218");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.842615, 3.842615, 3.842615, 3.842615, 3.842615, 3.842615, 3.842615");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.092483, 0.092483, 0.092483, 0.092483, 0.092483, 0.092483, 0.092483");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.799154, 3.799154, 3.799154, 3.799154, 3.799154, 3.799154, 3.799154");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.092089, 0.092089, 0.092089, 0.092089, 0.092089, 0.092089, 0.092089");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.799103, 3.799103, 3.799103, 3.799103, 3.799103, 3.799103, 3.799103");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.091692, 0.091692, 0.091692, 0.091692, 0.091692, 0.091692, 0.091692");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.019296, 0.019296, 0.019296, 0.019296, 0.019296, 0.019296, 0.019296");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039502, 0.039502, 0.039502, 0.039502, 0.039502, 0.039502, 0.039502");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006350;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.026673, 0.026585, 0.026352, 0.025942, 0.024509, 0.021000, 0.014274", \
          "0.026884, 0.026796, 0.026562, 0.026153, 0.024720, 0.021211, 0.014484", \
          "0.027446, 0.027359, 0.027125, 0.026715, 0.025282, 0.021773, 0.015047", \
          "0.028430, 0.028343, 0.028109, 0.027699, 0.026266, 0.022757, 0.016031", \
          "0.031875, 0.031787, 0.031553, 0.031143, 0.029710, 0.026201, 0.019475", \
          "0.040309, 0.040221, 0.039987, 0.039578, 0.038145, 0.034636, 0.027909", \
          "0.056475, 0.056388, 0.056154, 0.055744, 0.054311, 0.050802, 0.044076" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.059521, 0.059725, 0.060267, 0.061217, 0.064540, 0.072678, 0.088277", \
          "0.059732, 0.059935, 0.060478, 0.061427, 0.064751, 0.072889, 0.088488", \
          "0.060294, 0.060498, 0.061040, 0.061990, 0.065313, 0.073451, 0.089050", \
          "0.061278, 0.061482, 0.062024, 0.062974, 0.066297, 0.074435, 0.090034", \
          "0.064722, 0.064926, 0.065468, 0.066418, 0.069741, 0.077880, 0.093478", \
          "0.073157, 0.073360, 0.073903, 0.074852, 0.078176, 0.086314, 0.101913", \
          "0.089323, 0.089527, 0.090069, 0.091019, 0.094342, 0.102480, 0.118079" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(nb_64x16b_constraint_template) {
          index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          values ( \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573", \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573", \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573", \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573", \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573", \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573", \
            "0.193250, 0.192976, 0.192247, 0.190969, 0.186500, 0.175553, 0.154573" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.102191, 0.102058, 0.101702, 0.101080, 0.098903, 0.093572, 0.083354");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.103708, 0.103562, 0.103175, 0.102497, 0.100123, 0.094311, 0.083170");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011490;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.051066, 0.051137, 0.051326, 0.051657, 0.052814, 0.055647, 0.061078", \
          "0.051277, 0.051348, 0.051537, 0.051868, 0.053025, 0.055858, 0.061289", \
          "0.051840, 0.051910, 0.052099, 0.052430, 0.053587, 0.056420, 0.061851", \
          "0.052824, 0.052895, 0.053083, 0.053414, 0.054571, 0.057404, 0.062835", \
          "0.056268, 0.056339, 0.056528, 0.056858, 0.058015, 0.060848, 0.066279", \
          "0.064702, 0.064773, 0.064962, 0.065293, 0.066450, 0.069283, 0.074714", \
          "0.080869, 0.080940, 0.081128, 0.081459, 0.082616, 0.085449, 0.090880" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.069575, 0.069731, 0.070148, 0.070877, 0.073429, 0.079679, 0.091658", \
          "0.069786, 0.069942, 0.070359, 0.071088, 0.073640, 0.079890, 0.091869", \
          "0.070348, 0.070504, 0.070921, 0.071650, 0.074202, 0.080452, 0.092431", \
          "0.071332, 0.071488, 0.071905, 0.072634, 0.075186, 0.081436, 0.093415", \
          "0.074776, 0.074932, 0.075349, 0.076078, 0.078630, 0.084880, 0.096859", \
          "0.083211, 0.083367, 0.083784, 0.084513, 0.087065, 0.093315, 0.105294", \
          "0.099377, 0.099533, 0.099950, 0.100679, 0.103231, 0.109481, 0.121460" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.269553, 0.269680, 0.270018, 0.270610, 0.272681, 0.277753, 0.287474");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.490312, 0.490494, 0.490981, 0.491831, 0.494810, 0.502103, 0.516082");
          }
      }
     }
    bus(A) {
      bus_type : nb_64x16b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004114;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.095751, 0.095669, 0.095450, 0.095067, 0.093727, 0.090443, 0.084150", \
          "0.095962, 0.095880, 0.095661, 0.095278, 0.093937, 0.090654, 0.084361", \
          "0.096524, 0.096442, 0.096223, 0.095840, 0.094500, 0.091216, 0.084923", \
          "0.097509, 0.097426, 0.097208, 0.096824, 0.095484, 0.092200, 0.085907", \
          "0.100953, 0.100871, 0.100652, 0.100269, 0.098928, 0.095644, 0.089351", \
          "0.109387, 0.109305, 0.109086, 0.108703, 0.107362, 0.104079, 0.097786", \
          "0.125554, 0.125471, 0.125253, 0.124869, 0.123529, 0.120245, 0.113952" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.092576, 0.092872, 0.093660, 0.095039, 0.099866, 0.111686, 0.134342", \
          "0.092787, 0.093083, 0.093871, 0.095250, 0.100076, 0.111897, 0.134553", \
          "0.093349, 0.093645, 0.094433, 0.095812, 0.100639, 0.112459, 0.135115", \
          "0.094333, 0.094629, 0.095417, 0.096796, 0.101623, 0.113443, 0.136099", \
          "0.097778, 0.098073, 0.098861, 0.100240, 0.105067, 0.116887, 0.139543", \
          "0.106212, 0.106508, 0.107296, 0.108675, 0.113501, 0.125322, 0.147978", \
          "0.122378, 0.122674, 0.123462, 0.124841, 0.129668, 0.141488, 0.164144" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.014519, 0.014601, 0.014820, 0.015203, 0.016543, 0.019827, 0.026120", \
          "0.014308, 0.014390, 0.014609, 0.014992, 0.016333, 0.019616, 0.025909", \
          "0.013746, 0.013828, 0.014047, 0.014430, 0.015770, 0.019054, 0.025347", \
          "0.012761, 0.012844, 0.013062, 0.013446, 0.014786, 0.018070, 0.024363", \
          "0.009317, 0.009399, 0.009618, 0.010001, 0.011342, 0.014626, 0.020919", \
          "0.000883, 0.000965, 0.001184, 0.001567, 0.002908, 0.006191, 0.012484", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.022574, 0.022279, 0.021491, 0.020112, 0.015285, 0.003464, 0.000000", \
          "0.022363, 0.022068, 0.021280, 0.019901, 0.015074, 0.003253, 0.000000", \
          "0.021801, 0.021505, 0.020717, 0.019338, 0.014512, 0.002691, 0.000000", \
          "0.020817, 0.020521, 0.019733, 0.018354, 0.013528, 0.001707, 0.000000", \
          "0.017373, 0.017077, 0.016289, 0.014910, 0.010083, 0.000000, 0.000000", \
          "0.008938, 0.008643, 0.007855, 0.006476, 0.001649, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.090107, 0.090207, 0.090476, 0.090945, 0.092590, 0.096616, 0.104333");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.063218, 0.063293, 0.063495, 0.063848, 0.065082, 0.068104, 0.073896");
          }
      }
    }
    bus(D) {
      bus_type : nb_64x16b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007419;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.003433", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.011867", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.005775, 0.028034" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.072082, 0.071792, 0.071017, 0.069663, 0.064920, 0.053307, 0.031048", \
          "0.071871, 0.071581, 0.070807, 0.069452, 0.064710, 0.053096, 0.030837", \
          "0.071309, 0.071018, 0.070244, 0.068889, 0.064147, 0.052534, 0.030275", \
          "0.070325, 0.070034, 0.069260, 0.067905, 0.063163, 0.051550, 0.029291", \
          "0.066881, 0.066590, 0.065816, 0.064461, 0.059719, 0.048106, 0.025847", \
          "0.058446, 0.058156, 0.057382, 0.056027, 0.051284, 0.039671, 0.017412", \
          "0.042280, 0.041989, 0.041215, 0.039860, 0.035118, 0.023505, 0.001246" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.063369, 0.063487, 0.063802, 0.064353, 0.066282, 0.071005, 0.080059", \
          "0.063158, 0.063276, 0.063591, 0.064142, 0.066071, 0.070794, 0.079848", \
          "0.062596, 0.062714, 0.063029, 0.063580, 0.065509, 0.070232, 0.079285", \
          "0.061612, 0.061730, 0.062045, 0.062596, 0.064525, 0.069248, 0.078301", \
          "0.058168, 0.058286, 0.058601, 0.059152, 0.061080, 0.065804, 0.074857", \
          "0.049733, 0.049851, 0.050166, 0.050717, 0.052646, 0.057369, 0.066423", \
          "0.033567, 0.033685, 0.034000, 0.034551, 0.036480, 0.041203, 0.050256" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.010820, 0.010931, 0.011228, 0.011747, 0.013563, 0.018012, 0.026538");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026039, 0.026187, 0.026582, 0.027271, 0.029686, 0.035601, 0.046936");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.011143, 0.011032, 0.010736, 0.010218, 0.008406, 0.003967, 0.004923");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.007001, 0.006853, 0.006458, 0.005766, 0.003347, 0.002932, 0.014267");
          }
       }
    }
    bus(EMA) {
      bus_type : nb_64x16b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006449;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.324831" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.324831" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.324831" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356", \
          "0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.318356, 0.324831" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.009042;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.028171, 0.028013, 0.027592, 0.026855, 0.024275, 0.017958, 0.005850", \
          "0.028382, 0.028224, 0.027803, 0.027066, 0.024486, 0.018169, 0.006060", \
          "0.028944, 0.028786, 0.028365, 0.027628, 0.025048, 0.018731, 0.006623", \
          "0.029928, 0.029770, 0.029349, 0.028612, 0.026032, 0.019715, 0.007607", \
          "0.033372, 0.033214, 0.032793, 0.032056, 0.029476, 0.023159, 0.011051", \
          "0.041807, 0.041649, 0.041228, 0.040491, 0.037911, 0.031594, 0.019486", \
          "0.057973, 0.057815, 0.057394, 0.056657, 0.054077, 0.047760, 0.035652" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.056910, 0.057236, 0.058105, 0.059625, 0.064948, 0.077982, 0.102965", \
          "0.057121, 0.057447, 0.058316, 0.059836, 0.065159, 0.078193, 0.103175", \
          "0.057683, 0.058009, 0.058878, 0.060399, 0.065721, 0.078755, 0.103738", \
          "0.058667, 0.058993, 0.059862, 0.061383, 0.066705, 0.079739, 0.104722", \
          "0.062111, 0.062437, 0.063306, 0.064827, 0.070149, 0.083183, 0.108166", \
          "0.070546, 0.070872, 0.071741, 0.073261, 0.078584, 0.091618, 0.116601", \
          "0.086712, 0.087038, 0.087907, 0.089428, 0.094750, 0.107784, 0.132767" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.434413;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.615503;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.434418;
    }
  }
}
