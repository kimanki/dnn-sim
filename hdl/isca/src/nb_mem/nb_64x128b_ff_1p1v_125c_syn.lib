/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   NB_2KB_64x128b
 *      Instance Name:  nb_64x128b
 *      Words:          64
 *      Word Width:     128
 *      Mux:            1
 *      Corner:        ff_1p1v_125c
 *
 *      Creation Date:  Wed Nov 18 11:47:27 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(NB_2KB_64x128b) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Wed Nov 18 11:47:27 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : 125.000;
  nom_voltage         : 1.100;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 0.46;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 1.1);
  voltage_map (VDDCE, 1.1);
  voltage_map (VSSE, 0);

  operating_conditions(ff_1p1v_125c) {
    process      : 1;
    temperature  : 125.000;
    voltage      : 1.100;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ff_1p1v_125c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(nb_64x128b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (nb_64x128b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 128;
    bit_from : 127;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x128b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x128b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 6;
    bit_from : 5;
    bit_to : 0 ;
    downto : true ;
  }
  cell(nb_64x128b) {
    area : 26291.504250;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 6;
      word_width : 128;
    }
    bus(Q) {
      bus_type : nb_64x128b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.378775, 0.383663, 0.388995, 0.399660, 0.431655, 0.484979, 0.538304", \
              "0.378564, 0.383452, 0.388784, 0.399449, 0.431444, 0.484768, 0.538093", \
              "0.378001, 0.382890, 0.388222, 0.398887, 0.430882, 0.484206, 0.537530", \
              "0.377017, 0.381905, 0.387238, 0.397903, 0.429898, 0.483222, 0.536546", \
              "0.373573, 0.378461, 0.383794, 0.394459, 0.426453, 0.479778, 0.533102", \
              "0.365139, 0.370027, 0.375359, 0.386024, 0.418019, 0.471343, 0.524668", \
              "0.348972, 0.353860, 0.359193, 0.369858, 0.401853, 0.455177, 0.508501" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.390077, 0.394955, 0.400276, 0.410918, 0.442845, 0.496057, 0.549269", \
              "0.389866, 0.394744, 0.400065, 0.410707, 0.442635, 0.495847, 0.549059", \
              "0.389304, 0.394181, 0.399503, 0.410145, 0.442072, 0.495284, 0.548496", \
              "0.388320, 0.393197, 0.398519, 0.409161, 0.441088, 0.494300, 0.547512", \
              "0.384875, 0.389753, 0.395074, 0.405717, 0.437644, 0.490856, 0.544068", \
              "0.376441, 0.381319, 0.386640, 0.397282, 0.429209, 0.482421, 0.535633", \
              "0.360275, 0.365152, 0.370474, 0.381116, 0.413043, 0.466255, 0.519467" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.417620, 0.422508, 0.427840, 0.438505, 0.470500, 0.523824, 0.577149", \
              "0.417409, 0.422297, 0.427629, 0.438294, 0.470289, 0.523613, 0.576938", \
              "0.416846, 0.421735, 0.427067, 0.437732, 0.469727, 0.523051, 0.576375", \
              "0.415862, 0.420751, 0.426083, 0.436748, 0.468743, 0.522067, 0.575391", \
              "0.412418, 0.417306, 0.422639, 0.433304, 0.465298, 0.518623, 0.571947", \
              "0.403984, 0.408872, 0.414204, 0.424869, 0.456864, 0.510188, 0.563513", \
              "0.387817, 0.392706, 0.398038, 0.408703, 0.440698, 0.494022, 0.547346" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.428922, 0.433800, 0.439121, 0.449763, 0.481690, 0.534902, 0.588114", \
              "0.428711, 0.433589, 0.438910, 0.449552, 0.481480, 0.534692, 0.587904", \
              "0.428149, 0.433026, 0.438348, 0.448990, 0.480917, 0.534129, 0.587341", \
              "0.427165, 0.432042, 0.437364, 0.448006, 0.479933, 0.533145, 0.586357", \
              "0.423720, 0.428598, 0.433919, 0.444562, 0.476489, 0.529701, 0.582913", \
              "0.415286, 0.420164, 0.425485, 0.436127, 0.468054, 0.521266, 0.574479", \
              "0.399120, 0.403997, 0.409319, 0.419961, 0.451888, 0.505100, 0.558312" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.489037, 0.493925, 0.499257, 0.509922, 0.541917, 0.595241, 0.648566", \
              "0.488826, 0.493714, 0.499046, 0.509711, 0.541706, 0.595030, 0.648355", \
              "0.488264, 0.493152, 0.498484, 0.509149, 0.541144, 0.594468, 0.647793", \
              "0.487279, 0.492168, 0.497500, 0.508165, 0.540160, 0.593484, 0.646809", \
              "0.483835, 0.488723, 0.494056, 0.504721, 0.536715, 0.590040, 0.643364", \
              "0.475401, 0.480289, 0.485621, 0.496286, 0.528281, 0.581605, 0.634930", \
              "0.459234, 0.464123, 0.469455, 0.480120, 0.512115, 0.565439, 0.618764" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.500339, 0.505217, 0.510538, 0.521180, 0.553107, 0.606319, 0.659531", \
              "0.500128, 0.505006, 0.510327, 0.520969, 0.552897, 0.606109, 0.659321", \
              "0.499566, 0.504443, 0.509765, 0.520407, 0.552334, 0.605546, 0.658758", \
              "0.498582, 0.503459, 0.508781, 0.519423, 0.551350, 0.604562, 0.657774", \
              "0.495138, 0.500015, 0.505337, 0.515979, 0.547906, 0.601118, 0.654330", \
              "0.486703, 0.491581, 0.496902, 0.507544, 0.539472, 0.592684, 0.645896", \
              "0.470537, 0.475414, 0.480736, 0.491378, 0.523305, 0.576517, 0.629729" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.526530, 0.531418, 0.536751, 0.547416, 0.579410, 0.632735, 0.686059", \
              "0.526320, 0.531208, 0.536540, 0.547205, 0.579200, 0.632524, 0.685849", \
              "0.525757, 0.530645, 0.535978, 0.546643, 0.578637, 0.631962, 0.685286", \
              "0.524773, 0.529661, 0.534994, 0.545659, 0.577653, 0.630978, 0.684302", \
              "0.521329, 0.526217, 0.531550, 0.542214, 0.574209, 0.627534, 0.680858", \
              "0.512894, 0.517783, 0.523115, 0.533780, 0.565775, 0.619099, 0.672423", \
              "0.496728, 0.501616, 0.506949, 0.517614, 0.549608, 0.602933, 0.656257" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.537833, 0.542710, 0.548032, 0.558674, 0.590601, 0.643813, 0.697025", \
              "0.537622, 0.542499, 0.547821, 0.558463, 0.590390, 0.643602, 0.696814", \
              "0.537059, 0.541937, 0.547258, 0.557901, 0.589828, 0.643040, 0.696252", \
              "0.536075, 0.540953, 0.546274, 0.556917, 0.588844, 0.642056, 0.695268", \
              "0.532631, 0.537509, 0.542830, 0.553473, 0.585400, 0.638612, 0.691824", \
              "0.524197, 0.529074, 0.534396, 0.545038, 0.576965, 0.630177, 0.683389", \
              "0.508030, 0.512908, 0.518229, 0.528872, 0.560799, 0.614011, 0.667223" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.225699, 0.230587, 0.235920, 0.246585, 0.278579, 0.331904, 0.385228", \
              "0.225822, 0.230710, 0.236042, 0.246707, 0.278702, 0.332026, 0.385351", \
              "0.226148, 0.231036, 0.236368, 0.247033, 0.279028, 0.332353, 0.385677", \
              "0.226719, 0.231607, 0.236940, 0.247605, 0.279599, 0.332924, 0.386248", \
              "0.228718, 0.233606, 0.238939, 0.249604, 0.281598, 0.334923, 0.388247", \
              "0.233614, 0.238502, 0.243835, 0.254500, 0.286494, 0.339819, 0.393143", \
              "0.242998, 0.247886, 0.253218, 0.263883, 0.295878, 0.349203, 0.402527" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(nb_64x128b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.001283, 0.009946, 0.021826, 0.045585, 0.116865, 0.235665, 0.354465");
          }
          fall_power(nb_64x128b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.033559, 0.033528, 0.033495, 0.033428, 0.033226, 0.032890, 0.032573");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012440;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.028 ;
      min_pulse_width_low : 0.077 ;
      min_period : 0.437 ;
      minimum_period() {
        constraint : 0.437 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.476 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 0.623 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.667 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("27.046522, 27.046522, 27.046522, 27.046522, 27.046522, 27.046522, 27.046522");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.048333, 0.048333, 0.048333, 0.048333, 0.048333, 0.048333, 0.048333");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("27.253307, 27.253307, 27.253307, 27.253307, 27.253307, 27.253307, 27.253307");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.068036, 0.068036, 0.068036, 0.068036, 0.068036, 0.068036, 0.068036");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("27.926352, 27.926352, 27.926352, 27.926352, 27.926352, 27.926352, 27.926352");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.041981, 0.041981, 0.041981, 0.041981, 0.041981, 0.041981, 0.041981");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("29.670956, 29.670956, 29.670956, 29.670956, 29.670956, 29.670956, 29.670956");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.040458, 0.040458, 0.040458, 0.040458, 0.040458, 0.040458, 0.040458");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("28.904340, 28.904340, 28.904340, 28.904340, 28.904340, 28.904340, 28.904340");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.035170, 0.035170, 0.035170, 0.035170, 0.035170, 0.035170, 0.035170");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("31.960771, 31.960771, 31.960771, 31.960771, 31.960771, 31.960771, 31.960771");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.031948, 0.031948, 0.031948, 0.031948, 0.031948, 0.031948, 0.031948");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("32.053097, 32.053097, 32.053097, 32.053097, 32.053097, 32.053097, 32.053097");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.032035, 0.032035, 0.032035, 0.032035, 0.032035, 0.032035, 0.032035");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("32.642388, 32.642388, 32.642388, 32.642388, 32.642388, 32.642388, 32.642388");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.032597, 0.032597, 0.032597, 0.032597, 0.032597, 0.032597, 0.032597");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.220414, 17.220414, 17.220414, 17.220414, 17.220414, 17.220414, 17.220414");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.909820, 0.909820, 0.909820, 0.909820, 0.909820, 0.909820, 0.909820");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.486389, 17.486389, 17.486389, 17.486389, 17.486389, 17.486389, 17.486389");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.890102, 0.890102, 0.890102, 0.890102, 0.890102, 0.890102, 0.890102");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.720590, 17.720590, 17.720590, 17.720590, 17.720590, 17.720590, 17.720590");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.915240, 0.915240, 0.915240, 0.915240, 0.915240, 0.915240, 0.915240");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.685000, 17.685000, 17.685000, 17.685000, 17.685000, 17.685000, 17.685000");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.917040, 0.917040, 0.917040, 0.917040, 0.917040, 0.917040, 0.917040");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("18.342644, 18.342644, 18.342644, 18.342644, 18.342644, 18.342644, 18.342644");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.921953, 0.921953, 0.921953, 0.921953, 0.921953, 0.921953, 0.921953");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("18.971676, 18.971676, 18.971676, 18.971676, 18.971676, 18.971676, 18.971676");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.925117, 0.925117, 0.925117, 0.925117, 0.925117, 0.925117, 0.925117");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("19.212569, 19.212569, 19.212569, 19.212569, 19.212569, 19.212569, 19.212569");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.924820, 0.924820, 0.924820, 0.924820, 0.924820, 0.924820, 0.924820");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("19.369478, 19.369478, 19.369478, 19.369478, 19.369478, 19.369478, 19.369478");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.924567, 0.924567, 0.924567, 0.924567, 0.924567, 0.924567, 0.924567");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.032679, 0.032679, 0.032679, 0.032679, 0.032679, 0.032679, 0.032679");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.053997, 0.053997, 0.053997, 0.053997, 0.053997, 0.053997, 0.053997");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006350;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.026673, 0.026585, 0.026352, 0.025942, 0.024509, 0.021000, 0.014274", \
          "0.026884, 0.026796, 0.026562, 0.026153, 0.024720, 0.021211, 0.014484", \
          "0.027446, 0.027359, 0.027125, 0.026715, 0.025282, 0.021773, 0.015047", \
          "0.028430, 0.028343, 0.028109, 0.027699, 0.026266, 0.022757, 0.016031", \
          "0.031875, 0.031787, 0.031553, 0.031143, 0.029710, 0.026201, 0.019475", \
          "0.040309, 0.040221, 0.039987, 0.039578, 0.038145, 0.034636, 0.027909", \
          "0.056475, 0.056388, 0.056154, 0.055744, 0.054311, 0.050802, 0.044076" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.059521, 0.059725, 0.060267, 0.061217, 0.064540, 0.072678, 0.088277", \
          "0.059732, 0.059935, 0.060478, 0.061427, 0.064751, 0.072889, 0.088488", \
          "0.060294, 0.060498, 0.061040, 0.061990, 0.065313, 0.073451, 0.089050", \
          "0.061278, 0.061482, 0.062024, 0.062974, 0.066297, 0.074435, 0.090034", \
          "0.064722, 0.064926, 0.065468, 0.066418, 0.069741, 0.077880, 0.093478", \
          "0.073157, 0.073360, 0.073903, 0.074852, 0.078176, 0.086314, 0.101913", \
          "0.089323, 0.089527, 0.090069, 0.091019, 0.094342, 0.102480, 0.118079" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(nb_64x128b_constraint_template) {
          index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          values ( \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621", \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621", \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621", \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621", \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621", \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621", \
            "0.274298, 0.274024, 0.273295, 0.272018, 0.267548, 0.256601, 0.235621" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.932333, 0.932200, 0.931845, 0.931223, 0.929046, 0.923715, 0.913497");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.937418, 0.937272, 0.936885, 0.936207, 0.933833, 0.928020, 0.916879");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011490;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.140223, 0.140294, 0.140483, 0.140813, 0.141970, 0.144804, 0.150234", \
          "0.140434, 0.140505, 0.140694, 0.141024, 0.142181, 0.145014, 0.150445", \
          "0.140996, 0.141067, 0.141256, 0.141586, 0.142743, 0.145577, 0.151007", \
          "0.141980, 0.142051, 0.142240, 0.142570, 0.143727, 0.146561, 0.151992", \
          "0.145424, 0.145495, 0.145684, 0.146015, 0.147172, 0.150005, 0.155436", \
          "0.153859, 0.153930, 0.154119, 0.154449, 0.155606, 0.158440, 0.163870", \
          "0.170025, 0.170096, 0.170285, 0.170615, 0.171772, 0.174606, 0.180037" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.161884, 0.162040, 0.162456, 0.163186, 0.165738, 0.171988, 0.183967", \
          "0.162094, 0.162251, 0.162667, 0.163397, 0.165949, 0.172199, 0.184178", \
          "0.162657, 0.162813, 0.163230, 0.163959, 0.166511, 0.172761, 0.184740", \
          "0.163641, 0.163797, 0.164214, 0.164943, 0.167495, 0.173745, 0.185724", \
          "0.167085, 0.167241, 0.167658, 0.168387, 0.170939, 0.177189, 0.189168", \
          "0.175519, 0.175676, 0.176092, 0.176822, 0.179374, 0.185624, 0.197603", \
          "0.191686, 0.191842, 0.192259, 0.192988, 0.195540, 0.201790, 0.213769" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.921602, 0.921729, 0.922067, 0.922659, 0.924730, 0.929802, 0.939523");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("1.982994, 1.983176, 1.983663, 1.984513, 1.987492, 1.994785, 2.008764");
          }
      }
     }
    bus(A) {
      bus_type : nb_64x128b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004114;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.086768, 0.086686, 0.086467, 0.086084, 0.084743, 0.081460, 0.075166", \
          "0.086979, 0.086897, 0.086678, 0.086295, 0.084954, 0.081671, 0.075377", \
          "0.087541, 0.087459, 0.087240, 0.086857, 0.085516, 0.082233, 0.075940", \
          "0.088525, 0.088443, 0.088224, 0.087841, 0.086500, 0.083217, 0.076924", \
          "0.091969, 0.091887, 0.091668, 0.091285, 0.089944, 0.086661, 0.080368", \
          "0.100404, 0.100322, 0.100103, 0.099720, 0.098379, 0.095096, 0.088802", \
          "0.116570, 0.116488, 0.116269, 0.115886, 0.114545, 0.111262, 0.104969" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.089885, 0.090180, 0.090968, 0.092347, 0.097174, 0.108994, 0.131650", \
          "0.090095, 0.090391, 0.091179, 0.092558, 0.097385, 0.109205, 0.131861", \
          "0.090658, 0.090953, 0.091741, 0.093120, 0.097947, 0.109768, 0.132424", \
          "0.091642, 0.091937, 0.092725, 0.094104, 0.098931, 0.110752, 0.133408", \
          "0.095086, 0.095381, 0.096169, 0.097548, 0.102375, 0.114196, 0.136852", \
          "0.103520, 0.103816, 0.104604, 0.105983, 0.110810, 0.122630, 0.145286", \
          "0.119687, 0.119982, 0.120770, 0.122149, 0.126976, 0.138797, 0.161453" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.023502, 0.023584, 0.023803, 0.024186, 0.025527, 0.028810, 0.035104", \
          "0.023291, 0.023373, 0.023592, 0.023975, 0.025316, 0.028599, 0.034893", \
          "0.022729, 0.022811, 0.023030, 0.023413, 0.024754, 0.028037, 0.034330", \
          "0.021745, 0.021827, 0.022046, 0.022429, 0.023770, 0.027053, 0.033346", \
          "0.018301, 0.018383, 0.018602, 0.018985, 0.020326, 0.023609, 0.029902", \
          "0.009866, 0.009948, 0.010167, 0.010550, 0.011891, 0.015174, 0.021468", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.005301" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.031558, 0.031262, 0.030474, 0.029095, 0.024268, 0.012448, 0.000000", \
          "0.031347, 0.031051, 0.030263, 0.028884, 0.024057, 0.012237, 0.000000", \
          "0.030784, 0.030489, 0.029701, 0.028322, 0.023495, 0.011674, 0.000000", \
          "0.029800, 0.029505, 0.028717, 0.027338, 0.022511, 0.010690, 0.000000", \
          "0.026356, 0.026061, 0.025273, 0.023894, 0.019067, 0.007246, 0.000000", \
          "0.017922, 0.017626, 0.016838, 0.015459, 0.010632, 0.000000, 0.000000", \
          "0.001755, 0.001460, 0.000672, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.192176, 0.192074, 0.191802, 0.191327, 0.189663, 0.185588, 0.177777");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.220649, 0.220571, 0.220363, 0.219999, 0.218727, 0.215610, 0.209637");
          }
      }
    }
    bus(D) {
      bus_type : nb_64x128b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007419;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.007725" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.087543, 0.087253, 0.086479, 0.085124, 0.080382, 0.068768, 0.046509", \
          "0.087332, 0.087042, 0.086268, 0.084913, 0.080171, 0.068557, 0.046298", \
          "0.086770, 0.086480, 0.085706, 0.084351, 0.079609, 0.067995, 0.045736", \
          "0.085786, 0.085496, 0.084722, 0.083367, 0.078624, 0.067011, 0.044752", \
          "0.082342, 0.082052, 0.081277, 0.079923, 0.075180, 0.063567, 0.041308", \
          "0.073907, 0.073617, 0.072843, 0.071488, 0.066746, 0.055132, 0.032873", \
          "0.057741, 0.057451, 0.056677, 0.055322, 0.050579, 0.038966, 0.016707" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.078830, 0.078948, 0.079263, 0.079814, 0.081743, 0.086467, 0.095520", \
          "0.078619, 0.078738, 0.079052, 0.079604, 0.081532, 0.086256, 0.095309", \
          "0.078057, 0.078175, 0.078490, 0.079041, 0.080970, 0.085693, 0.094747", \
          "0.077073, 0.077191, 0.077506, 0.078057, 0.079986, 0.084709, 0.093763", \
          "0.073629, 0.073747, 0.074062, 0.074613, 0.076542, 0.081265, 0.090318", \
          "0.065194, 0.065312, 0.065627, 0.066178, 0.068107, 0.072831, 0.081884", \
          "0.049028, 0.049146, 0.049461, 0.050012, 0.051941, 0.056664, 0.065718" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.011260, 0.011372, 0.011668, 0.012187, 0.014004, 0.018452, 0.026978");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.027915, 0.028063, 0.028457, 0.029147, 0.031562, 0.037476, 0.048812");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.011088, 0.010977, 0.010681, 0.010163, 0.008351, 0.003912, 0.004999");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.006968, 0.006820, 0.006425, 0.005734, 0.003315, 0.002946, 0.014281");
          }
       }
    }
    bus(EMA) {
      bus_type : nb_64x128b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006449;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.429064, 0.429220, 0.429637, 0.430366, 0.432918, 0.439168, 0.451147", \
          "0.429275, 0.429431, 0.429848, 0.430577, 0.433129, 0.439379, 0.451358", \
          "0.429837, 0.429993, 0.430410, 0.431139, 0.433691, 0.439941, 0.451921", \
          "0.430821, 0.430978, 0.431394, 0.432123, 0.434675, 0.440925, 0.452905", \
          "0.434265, 0.434422, 0.434838, 0.435567, 0.438120, 0.444370, 0.456349", \
          "0.442700, 0.442856, 0.443273, 0.444002, 0.446554, 0.452804, 0.464783", \
          "0.458866, 0.459023, 0.459439, 0.460168, 0.462720, 0.468970, 0.480950" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.429064, 0.429220, 0.429637, 0.430366, 0.432918, 0.439168, 0.451147", \
          "0.429275, 0.429431, 0.429848, 0.430577, 0.433129, 0.439379, 0.451358", \
          "0.429837, 0.429993, 0.430410, 0.431139, 0.433691, 0.439941, 0.451921", \
          "0.430821, 0.430978, 0.431394, 0.432123, 0.434675, 0.440925, 0.452905", \
          "0.434265, 0.434422, 0.434838, 0.435567, 0.438120, 0.444370, 0.456349", \
          "0.442700, 0.442856, 0.443273, 0.444002, 0.446554, 0.452804, 0.464783", \
          "0.458866, 0.459023, 0.459439, 0.460168, 0.462720, 0.468970, 0.480950" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.429064, 0.429220, 0.429637, 0.430366, 0.432918, 0.439168, 0.451147", \
          "0.429275, 0.429431, 0.429848, 0.430577, 0.433129, 0.439379, 0.451358", \
          "0.429837, 0.429993, 0.430410, 0.431139, 0.433691, 0.439941, 0.451921", \
          "0.430821, 0.430978, 0.431394, 0.432123, 0.434675, 0.440925, 0.452905", \
          "0.434265, 0.434422, 0.434838, 0.435567, 0.438120, 0.444370, 0.456349", \
          "0.442700, 0.442856, 0.443273, 0.444002, 0.446554, 0.452804, 0.464783", \
          "0.458866, 0.459023, 0.459439, 0.460168, 0.462720, 0.468970, 0.480950" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.429064, 0.429220, 0.429637, 0.430366, 0.432918, 0.439168, 0.451147", \
          "0.429275, 0.429431, 0.429848, 0.430577, 0.433129, 0.439379, 0.451358", \
          "0.429837, 0.429993, 0.430410, 0.431139, 0.433691, 0.439941, 0.451921", \
          "0.430821, 0.430978, 0.431394, 0.432123, 0.434675, 0.440925, 0.452905", \
          "0.434265, 0.434422, 0.434838, 0.435567, 0.438120, 0.444370, 0.456349", \
          "0.442700, 0.442856, 0.443273, 0.444002, 0.446554, 0.452804, 0.464783", \
          "0.458866, 0.459023, 0.459439, 0.460168, 0.462720, 0.468970, 0.480950" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.009042;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.028171, 0.028013, 0.027592, 0.026855, 0.024275, 0.017958, 0.005850", \
          "0.028382, 0.028224, 0.027803, 0.027066, 0.024486, 0.018169, 0.006060", \
          "0.028944, 0.028786, 0.028365, 0.027628, 0.025048, 0.018731, 0.006623", \
          "0.029928, 0.029770, 0.029349, 0.028612, 0.026032, 0.019715, 0.007607", \
          "0.033372, 0.033214, 0.032793, 0.032056, 0.029476, 0.023159, 0.011051", \
          "0.041807, 0.041649, 0.041228, 0.040491, 0.037911, 0.031594, 0.019486", \
          "0.057973, 0.057815, 0.057394, 0.056657, 0.054077, 0.047760, 0.035652" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.056910, 0.057236, 0.058105, 0.059625, 0.064948, 0.077982, 0.102965", \
          "0.057121, 0.057447, 0.058316, 0.059836, 0.065159, 0.078193, 0.103175", \
          "0.057683, 0.058009, 0.058878, 0.060399, 0.065721, 0.078755, 0.103738", \
          "0.058667, 0.058993, 0.059862, 0.061383, 0.066705, 0.079739, 0.104722", \
          "0.062111, 0.062437, 0.063306, 0.064827, 0.070149, 0.083183, 0.108166", \
          "0.070546, 0.070872, 0.071741, 0.073261, 0.078584, 0.091618, 0.116601", \
          "0.086712, 0.087038, 0.087907, 0.089428, 0.094750, 0.107784, 0.132767" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.631915;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 2.194148;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.63269;
    }
  }
}
