/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   USERLIB
 *      Instance Name:  off_64x64b
 *      Words:          64
 *      Word Width:     64
 *      Mux:            1
 *      Corner:        ff_1p1v_0c
 *
 *      Creation Date:  Thu Nov 19 14:54:13 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Thu Nov 19 14:54:13 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : 0.000;
  nom_voltage         : 1.100;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 0.46;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 1.1);
  voltage_map (VDDCE, 1.1);
  voltage_map (VSSE, 0);

  operating_conditions(ff_1p1v_0c) {
    process      : 1;
    temperature  : 0.000;
    voltage      : 1.100;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ff_1p1v_0c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(off_64x64b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (off_64x64b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 64;
    bit_from : 63;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_64x64b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_64x64b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 6;
    bit_from : 5;
    bit_to : 0 ;
    downto : true ;
  }
  cell(off_64x64b) {
    area : 16688.591150;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 6;
      word_width : 64;
    }
    bus(Q) {
      bus_type : off_64x64b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.322024, 0.326614, 0.331621, 0.341634, 0.371676, 0.421745, 0.471815", \
              "0.321917, 0.326506, 0.331513, 0.341527, 0.371569, 0.421638, 0.471707", \
              "0.321630, 0.326220, 0.331226, 0.341240, 0.371282, 0.421351, 0.471421", \
              "0.321128, 0.325718, 0.330725, 0.340739, 0.370780, 0.420850, 0.470919", \
              "0.319372, 0.323962, 0.328969, 0.338983, 0.369025, 0.419094, 0.469163", \
              "0.315073, 0.319662, 0.324669, 0.334683, 0.364725, 0.414794, 0.464863", \
              "0.306831, 0.311421, 0.316428, 0.326442, 0.356483, 0.406553, 0.456622" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.331070, 0.335387, 0.340097, 0.349517, 0.377777, 0.424876, 0.471975", \
              "0.330962, 0.335280, 0.339990, 0.349410, 0.377669, 0.424768, 0.471868", \
              "0.330676, 0.334993, 0.339703, 0.349123, 0.377383, 0.424482, 0.471581", \
              "0.330174, 0.334492, 0.339201, 0.348621, 0.376881, 0.423980, 0.471079", \
              "0.328418, 0.332736, 0.337446, 0.346866, 0.375125, 0.422224, 0.469324", \
              "0.324119, 0.328436, 0.333146, 0.342566, 0.370825, 0.417925, 0.465024", \
              "0.315877, 0.320195, 0.324905, 0.334324, 0.362584, 0.409683, 0.456782" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.356237, 0.360826, 0.365833, 0.375847, 0.405889, 0.455958, 0.506027", \
              "0.356129, 0.360719, 0.365726, 0.375740, 0.405781, 0.455850, 0.505920", \
              "0.355842, 0.360432, 0.365439, 0.375453, 0.405495, 0.455564, 0.505633", \
              "0.355341, 0.359930, 0.364937, 0.374951, 0.404993, 0.455062, 0.505132", \
              "0.353585, 0.358175, 0.363182, 0.373195, 0.403237, 0.453306, 0.503376", \
              "0.349285, 0.353875, 0.358882, 0.368896, 0.398937, 0.449007, 0.499076", \
              "0.341044, 0.345633, 0.350640, 0.360654, 0.390696, 0.440765, 0.490835" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.365283, 0.369600, 0.374310, 0.383730, 0.411989, 0.459089, 0.506188", \
              "0.365175, 0.369492, 0.374202, 0.383622, 0.411882, 0.458981, 0.506080", \
              "0.364888, 0.369206, 0.373916, 0.383336, 0.411595, 0.458694, 0.505794", \
              "0.364387, 0.368704, 0.373414, 0.382834, 0.411093, 0.458193, 0.505292", \
              "0.362631, 0.366948, 0.371658, 0.381078, 0.409338, 0.456437, 0.503536", \
              "0.358331, 0.362649, 0.367358, 0.376778, 0.405038, 0.452137, 0.499236", \
              "0.350090, 0.354407, 0.359117, 0.368537, 0.396796, 0.443896, 0.490995" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.421884, 0.426473, 0.431480, 0.441494, 0.471536, 0.521605, 0.571674", \
              "0.421776, 0.426366, 0.431373, 0.441387, 0.471428, 0.521497, 0.571567", \
              "0.421489, 0.426079, 0.431086, 0.441100, 0.471142, 0.521211, 0.571280", \
              "0.420988, 0.425577, 0.430584, 0.440598, 0.470640, 0.520709, 0.570779", \
              "0.419232, 0.423822, 0.428829, 0.438842, 0.468884, 0.518953, 0.569023", \
              "0.414932, 0.419522, 0.424529, 0.434543, 0.464584, 0.514654, 0.564723", \
              "0.406691, 0.411280, 0.416287, 0.426301, 0.456343, 0.506412, 0.556482" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.430930, 0.435247, 0.439957, 0.449377, 0.477636, 0.524736, 0.571835", \
              "0.430822, 0.435139, 0.439849, 0.449269, 0.477529, 0.524628, 0.571727", \
              "0.430535, 0.434853, 0.439563, 0.448983, 0.477242, 0.524341, 0.571441", \
              "0.430034, 0.434351, 0.439061, 0.448481, 0.476740, 0.523840, 0.570939", \
              "0.428278, 0.432595, 0.437305, 0.446725, 0.474985, 0.522084, 0.569183", \
              "0.423978, 0.428296, 0.433005, 0.442425, 0.470685, 0.517784, 0.564883", \
              "0.415737, 0.420054, 0.424764, 0.434184, 0.462443, 0.509543, 0.556642" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.455502, 0.460091, 0.465098, 0.475112, 0.505154, 0.555223, 0.605292", \
              "0.455394, 0.459984, 0.464991, 0.475005, 0.505046, 0.555115, 0.605185", \
              "0.455107, 0.459697, 0.464704, 0.474718, 0.504759, 0.554829, 0.604898", \
              "0.454606, 0.459195, 0.464202, 0.474216, 0.504258, 0.554327, 0.604396", \
              "0.452850, 0.457440, 0.462447, 0.472460, 0.502502, 0.552571, 0.602641", \
              "0.448550, 0.453140, 0.458147, 0.468161, 0.498202, 0.548272, 0.598341", \
              "0.440309, 0.444898, 0.449905, 0.459919, 0.489961, 0.540030, 0.590099" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.464547, 0.468865, 0.473575, 0.482995, 0.511254, 0.558353, 0.605453", \
              "0.464440, 0.468757, 0.473467, 0.482887, 0.511147, 0.558246, 0.605345", \
              "0.464153, 0.468471, 0.473181, 0.482601, 0.510860, 0.557959, 0.605059", \
              "0.463652, 0.467969, 0.472679, 0.482099, 0.510358, 0.557458, 0.604557", \
              "0.461896, 0.466213, 0.470923, 0.480343, 0.508603, 0.555702, 0.602801", \
              "0.457596, 0.461913, 0.466623, 0.476043, 0.504303, 0.551402, 0.598501", \
              "0.449355, 0.453672, 0.458382, 0.467802, 0.496061, 0.543161, 0.590260" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.015924, 0.028173, 0.041535, 0.068260, 0.148435, 0.282060, 0.415685");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.154050, 0.158640, 0.163646, 0.173660, 0.203702, 0.253771, 0.303841", \
              "0.154180, 0.158769, 0.163776, 0.173790, 0.203832, 0.253901, 0.303970", \
              "0.154525, 0.159115, 0.164122, 0.174136, 0.204178, 0.254247, 0.304316", \
              "0.155131, 0.159721, 0.164727, 0.174741, 0.204783, 0.254852, 0.304922", \
              "0.157250, 0.161839, 0.166846, 0.176860, 0.206902, 0.256971, 0.307040", \
              "0.162439, 0.167028, 0.172035, 0.182049, 0.212091, 0.262160, 0.312229", \
              "0.172384, 0.176974, 0.181981, 0.191995, 0.222036, 0.272105, 0.322175" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014429, 0.024836, 0.036189, 0.058894, 0.127011, 0.240538, 0.354066");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(off_64x64b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.012147, 0.024773, 0.038547, 0.066095, 0.148739, 0.286479, 0.424220");
          }
          fall_power(off_64x64b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.012608, 0.012592, 0.012574, 0.012540, 0.012435, 0.012261, 0.012088");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012370;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.028 ;
      min_pulse_width_low : 0.077 ;
      min_period : 0.328 ;
      minimum_period() {
        constraint : 0.328 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.386 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 0.534 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.578 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("13.305668, 13.305668, 13.305668, 13.305668, 13.305668, 13.305668, 13.305668");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.040198, 0.040198, 0.040198, 0.040198, 0.040198, 0.040198, 0.040198");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("14.428077, 14.428077, 14.428077, 14.428077, 14.428077, 14.428077, 14.428077");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.041234, 0.041234, 0.041234, 0.041234, 0.041234, 0.041234, 0.041234");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("15.344667, 15.344667, 15.344667, 15.344667, 15.344667, 15.344667, 15.344667");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039821, 0.039821, 0.039821, 0.039821, 0.039821, 0.039821, 0.039821");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("15.343648, 15.343648, 15.343648, 15.343648, 15.343648, 15.343648, 15.343648");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.038531, 0.038531, 0.038531, 0.038531, 0.038531, 0.038531, 0.038531");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("16.818975, 16.818975, 16.818975, 16.818975, 16.818975, 16.818975, 16.818975");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039040, 0.039040, 0.039040, 0.039040, 0.039040, 0.039040, 0.039040");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("14.786676, 14.786676, 14.786676, 14.786676, 14.786676, 14.786676, 14.786676");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.038816, 0.038816, 0.038816, 0.038816, 0.038816, 0.038816, 0.038816");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("14.760062, 14.760062, 14.760062, 14.760062, 14.760062, 14.760062, 14.760062");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039879, 0.039879, 0.039879, 0.039879, 0.039879, 0.039879, 0.039879");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("16.632268, 16.632268, 16.632268, 16.632268, 16.632268, 16.632268, 16.632268");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039508, 0.039508, 0.039508, 0.039508, 0.039508, 0.039508, 0.039508");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.278743, 9.278743, 9.278743, 9.278743, 9.278743, 9.278743, 9.278743");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.009019, 0.009019, 0.009019, 0.009019, 0.009019, 0.009019, 0.009019");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.217789, 9.217789, 9.217789, 9.217789, 9.217789, 9.217789, 9.217789");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.009322, 0.009322, 0.009322, 0.009322, 0.009322, 0.009322, 0.009322");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.527858, 9.527858, 9.527858, 9.527858, 9.527858, 9.527858, 9.527858");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.007498, 0.007498, 0.007498, 0.007498, 0.007498, 0.007498, 0.007498");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.413272, 9.413272, 9.413272, 9.413272, 9.413272, 9.413272, 9.413272");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.006893, 0.006893, 0.006893, 0.006893, 0.006893, 0.006893, 0.006893");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.555046, 9.555046, 9.555046, 9.555046, 9.555046, 9.555046, 9.555046");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.008287, 0.008287, 0.008287, 0.008287, 0.008287, 0.008287, 0.008287");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("10.137484, 10.137484, 10.137484, 10.137484, 10.137484, 10.137484, 10.137484");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.008170, 0.008170, 0.008170, 0.008170, 0.008170, 0.008170, 0.008170");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("10.217974, 10.217974, 10.217974, 10.217974, 10.217974, 10.217974, 10.217974");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.007724, 0.007724, 0.007724, 0.007724, 0.007724, 0.007724, 0.007724");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("10.231012, 10.231012, 10.231012, 10.231012, 10.231012, 10.231012, 10.231012");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.008042, 0.008042, 0.008042, 0.008042, 0.008042, 0.008042, 0.008042");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.007255, 0.007255, 0.007255, 0.007255, 0.007255, 0.007255, 0.007255");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026452, 0.026452, 0.026452, 0.026452, 0.026452, 0.026452, 0.026452");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006420;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.028644, 0.028568, 0.028363, 0.028005, 0.026751, 0.023680, 0.017795", \
          "0.028752, 0.028675, 0.028470, 0.028112, 0.026858, 0.023788, 0.017902", \
          "0.029039, 0.028962, 0.028757, 0.028399, 0.027145, 0.024074, 0.018189", \
          "0.029540, 0.029463, 0.029259, 0.028900, 0.027647, 0.024576, 0.018691", \
          "0.031296, 0.031219, 0.031015, 0.030656, 0.029402, 0.026332, 0.020447", \
          "0.035596, 0.035519, 0.035314, 0.034956, 0.033702, 0.030632, 0.024746", \
          "0.043837, 0.043760, 0.043556, 0.043197, 0.041944, 0.038873, 0.032988" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.042536, 0.042724, 0.043224, 0.044099, 0.047162, 0.054663, 0.069041", \
          "0.042644, 0.042831, 0.043331, 0.044206, 0.047269, 0.054771, 0.069148", \
          "0.042930, 0.043118, 0.043618, 0.044493, 0.047556, 0.055057, 0.069435", \
          "0.043432, 0.043619, 0.044119, 0.044995, 0.048058, 0.055559, 0.069937", \
          "0.045188, 0.045375, 0.045875, 0.046750, 0.049813, 0.057315, 0.071692", \
          "0.049487, 0.049675, 0.050175, 0.051050, 0.054113, 0.061615, 0.075992", \
          "0.057729, 0.057916, 0.058416, 0.059292, 0.062355, 0.069856, 0.084234" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(off_64x64b_constraint_template) {
          index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          values ( \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855", \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855", \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855", \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855", \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855", \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855", \
            "0.195586, 0.195326, 0.194633, 0.193420, 0.189175, 0.178780, 0.158855" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.035111, 0.035000, 0.034704, 0.034186, 0.032371, 0.027927, 0.019411");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.032180, 0.032072, 0.031786, 0.031284, 0.029527, 0.025226, 0.016981");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011590;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.081176, 0.081240, 0.081411, 0.081711, 0.082759, 0.085327, 0.090248", \
          "0.081283, 0.081348, 0.081519, 0.081818, 0.082867, 0.085434, 0.090355", \
          "0.081570, 0.081634, 0.081805, 0.082105, 0.083153, 0.085721, 0.090642", \
          "0.082072, 0.082136, 0.082307, 0.082607, 0.083655, 0.086223, 0.091144", \
          "0.083828, 0.083892, 0.084063, 0.084362, 0.085411, 0.087978, 0.092899", \
          "0.088127, 0.088192, 0.088363, 0.088662, 0.089711, 0.092278, 0.097199", \
          "0.096369, 0.096433, 0.096604, 0.096904, 0.097952, 0.100520, 0.105441" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.107787, 0.107956, 0.108408, 0.109198, 0.111964, 0.118737, 0.131720", \
          "0.107894, 0.108064, 0.108515, 0.109305, 0.112071, 0.118845, 0.131827", \
          "0.108181, 0.108350, 0.108802, 0.109592, 0.112358, 0.119131, 0.132114", \
          "0.108682, 0.108852, 0.109303, 0.110094, 0.112859, 0.119633, 0.132615", \
          "0.110438, 0.110608, 0.111059, 0.111849, 0.114615, 0.121389, 0.134371", \
          "0.114738, 0.114907, 0.115359, 0.116149, 0.118915, 0.125689, 0.138671", \
          "0.122979, 0.123149, 0.123600, 0.124391, 0.127156, 0.133930, 0.146912" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.605286, 0.605366, 0.605578, 0.605950, 0.607252, 0.610440, 0.616550");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("1.031873, 1.032004, 1.032353, 1.032963, 1.035098, 1.040326, 1.050347");
          }
      }
     }
    bus(A) {
      bus_type : off_64x64b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004165;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.080688, 0.080633, 0.080488, 0.080233, 0.079341, 0.077156, 0.072970", \
          "0.080795, 0.080741, 0.080595, 0.080340, 0.079448, 0.077264, 0.073077", \
          "0.081082, 0.081027, 0.080882, 0.080627, 0.079735, 0.077551, 0.073364", \
          "0.081584, 0.081529, 0.081383, 0.081129, 0.080237, 0.078052, 0.073866", \
          "0.083339, 0.083285, 0.083139, 0.082884, 0.081992, 0.079808, 0.075621", \
          "0.087639, 0.087585, 0.087439, 0.087184, 0.086292, 0.084108, 0.079921", \
          "0.095881, 0.095826, 0.095680, 0.095425, 0.094534, 0.092349, 0.088163" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.074923, 0.075192, 0.075909, 0.077165, 0.081561, 0.092325, 0.112957", \
          "0.075030, 0.075299, 0.076017, 0.077273, 0.081668, 0.092433, 0.113064", \
          "0.075317, 0.075586, 0.076304, 0.077559, 0.081955, 0.092719, 0.113351", \
          "0.075818, 0.076088, 0.076805, 0.078061, 0.082456, 0.093221, 0.113853", \
          "0.077574, 0.077843, 0.078561, 0.079817, 0.084212, 0.094977, 0.115608", \
          "0.081874, 0.082143, 0.082861, 0.084117, 0.088512, 0.099277, 0.119908", \
          "0.090115, 0.090385, 0.091102, 0.092358, 0.096753, 0.107518, 0.128150" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.015566, 0.015621, 0.015767, 0.016021, 0.016913, 0.019098, 0.023284", \
          "0.015459, 0.015513, 0.015659, 0.015914, 0.016806, 0.018990, 0.023177", \
          "0.015172, 0.015227, 0.015372, 0.015627, 0.016519, 0.018704, 0.022890", \
          "0.014671, 0.014725, 0.014871, 0.015126, 0.016018, 0.018202, 0.022389", \
          "0.012915, 0.012969, 0.013115, 0.013370, 0.014262, 0.016446, 0.020633", \
          "0.008615, 0.008670, 0.008815, 0.009070, 0.009962, 0.012146, 0.016333", \
          "0.000374, 0.000428, 0.000574, 0.000829, 0.001721, 0.003905, 0.008092" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.022472, 0.022203, 0.021486, 0.020230, 0.015834, 0.005070, 0.000000", \
          "0.022365, 0.022096, 0.021378, 0.020122, 0.015727, 0.004962, 0.000000", \
          "0.022078, 0.021809, 0.021091, 0.019836, 0.015440, 0.004676, 0.000000", \
          "0.021577, 0.021307, 0.020590, 0.019334, 0.014939, 0.004174, 0.000000", \
          "0.019821, 0.019552, 0.018834, 0.017578, 0.013183, 0.002418, 0.000000", \
          "0.015521, 0.015252, 0.014534, 0.013278, 0.008883, 0.000000, 0.000000", \
          "0.007280, 0.007010, 0.006293, 0.005037, 0.000642, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.093131, 0.093131, 0.093130, 0.093128, 0.093122, 0.093107, 0.093079");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.063938, 0.063997, 0.064152, 0.064425, 0.065378, 0.067714, 0.072189");
          }
      }
    }
    bus(D) {
      bus_type : off_64x64b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007494;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.073566, 0.073295, 0.072574, 0.071310, 0.066890, 0.056063, 0.035313", \
          "0.073458, 0.073188, 0.072466, 0.071203, 0.066782, 0.055956, 0.035205", \
          "0.073172, 0.072901, 0.072179, 0.070916, 0.066496, 0.055669, 0.034918", \
          "0.072670, 0.072400, 0.071678, 0.070415, 0.065994, 0.055167, 0.034417", \
          "0.070914, 0.070644, 0.069922, 0.068659, 0.064238, 0.053412, 0.032661", \
          "0.066615, 0.066344, 0.065622, 0.064359, 0.059938, 0.049112, 0.028361", \
          "0.058373, 0.058103, 0.057381, 0.056118, 0.051697, 0.040870, 0.020120" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.065920, 0.066008, 0.066242, 0.066651, 0.068084, 0.071594, 0.078320", \
          "0.065813, 0.065900, 0.066134, 0.066544, 0.067977, 0.071486, 0.078213", \
          "0.065526, 0.065614, 0.065848, 0.066257, 0.067690, 0.071200, 0.077926", \
          "0.065024, 0.065112, 0.065346, 0.065756, 0.067189, 0.070698, 0.077424", \
          "0.063269, 0.063356, 0.063590, 0.064000, 0.065433, 0.068942, 0.075669", \
          "0.058969, 0.059056, 0.059290, 0.059700, 0.061133, 0.064642, 0.071369", \
          "0.050727, 0.050815, 0.051049, 0.051459, 0.052892, 0.056401, 0.063127" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.010203, 0.010275, 0.010468, 0.010806, 0.011990, 0.014887, 0.020441");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.024595, 0.024714, 0.025031, 0.025586, 0.027530, 0.032291, 0.041415");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.002953, 0.002881, 0.002688, 0.002352, 0.001175, 0.001876, 0.007430");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.002044, 0.002163, 0.002480, 0.003035, 0.004979, 0.009740, 0.018864");
          }
       }
    }
    bus(EMA) {
      bus_type : off_64x64b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006495;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.322868, 0.322868, 0.322868, 0.323400, 0.326166, 0.332939, 0.345921", \
          "0.322868, 0.322868, 0.322868, 0.323507, 0.326273, 0.333046, 0.346029", \
          "0.322868, 0.322868, 0.323004, 0.323794, 0.326560, 0.333333, 0.346316", \
          "0.322884, 0.323054, 0.323505, 0.324296, 0.327061, 0.333835, 0.346817", \
          "0.324640, 0.324809, 0.325261, 0.326051, 0.328817, 0.335591, 0.348573", \
          "0.328940, 0.329109, 0.329561, 0.330351, 0.333117, 0.339890, 0.352873", \
          "0.337181, 0.337351, 0.337802, 0.338593, 0.341358, 0.348132, 0.361114" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.322868, 0.322868, 0.322868, 0.323400, 0.326166, 0.332939, 0.345921", \
          "0.322868, 0.322868, 0.322868, 0.323507, 0.326273, 0.333046, 0.346029", \
          "0.322868, 0.322868, 0.323004, 0.323794, 0.326560, 0.333333, 0.346316", \
          "0.322884, 0.323054, 0.323505, 0.324296, 0.327061, 0.333835, 0.346817", \
          "0.324640, 0.324809, 0.325261, 0.326051, 0.328817, 0.335591, 0.348573", \
          "0.328940, 0.329109, 0.329561, 0.330351, 0.333117, 0.339890, 0.352873", \
          "0.337181, 0.337351, 0.337802, 0.338593, 0.341358, 0.348132, 0.361114" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.322868, 0.322868, 0.322868, 0.323400, 0.326166, 0.332939, 0.345921", \
          "0.322868, 0.322868, 0.322868, 0.323507, 0.326273, 0.333046, 0.346029", \
          "0.322868, 0.322868, 0.323004, 0.323794, 0.326560, 0.333333, 0.346316", \
          "0.322884, 0.323054, 0.323505, 0.324296, 0.327061, 0.333835, 0.346817", \
          "0.324640, 0.324809, 0.325261, 0.326051, 0.328817, 0.335591, 0.348573", \
          "0.328940, 0.329109, 0.329561, 0.330351, 0.333117, 0.339890, 0.352873", \
          "0.337181, 0.337351, 0.337802, 0.338593, 0.341358, 0.348132, 0.361114" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.322868, 0.322868, 0.322868, 0.323400, 0.326166, 0.332939, 0.345921", \
          "0.322868, 0.322868, 0.322868, 0.323507, 0.326273, 0.333046, 0.346029", \
          "0.322868, 0.322868, 0.323004, 0.323794, 0.326560, 0.333333, 0.346316", \
          "0.322884, 0.323054, 0.323505, 0.324296, 0.327061, 0.333835, 0.346817", \
          "0.324640, 0.324809, 0.325261, 0.326051, 0.328817, 0.335591, 0.348573", \
          "0.328940, 0.329109, 0.329561, 0.330351, 0.333117, 0.339890, 0.352873", \
          "0.337181, 0.337351, 0.337802, 0.338593, 0.341358, 0.348132, 0.361114" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.008997;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.030188, 0.030039, 0.029641, 0.028945, 0.026510, 0.020545, 0.009113", \
          "0.030295, 0.030146, 0.029749, 0.029053, 0.026617, 0.020653, 0.009220", \
          "0.030582, 0.030433, 0.030035, 0.029339, 0.026904, 0.020939, 0.009507", \
          "0.031084, 0.030935, 0.030537, 0.029841, 0.027405, 0.021441, 0.010009", \
          "0.032839, 0.032690, 0.032293, 0.031597, 0.029161, 0.023197, 0.011764", \
          "0.037139, 0.036990, 0.036593, 0.035897, 0.033461, 0.027496, 0.016064", \
          "0.045381, 0.045232, 0.044834, 0.044138, 0.041702, 0.035738, 0.024305" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.039769, 0.040086, 0.040932, 0.042412, 0.047594, 0.060285, 0.084608", \
          "0.039876, 0.040193, 0.041039, 0.042520, 0.047702, 0.060392, 0.084715", \
          "0.040163, 0.040480, 0.041326, 0.042807, 0.047988, 0.060679, 0.085002", \
          "0.040664, 0.040982, 0.041828, 0.043308, 0.048490, 0.061180, 0.085503", \
          "0.042420, 0.042737, 0.043583, 0.045064, 0.050246, 0.062936, 0.087259", \
          "0.046720, 0.047037, 0.047883, 0.049364, 0.054546, 0.067236, 0.091559", \
          "0.054961, 0.055279, 0.056125, 0.057605, 0.062787, 0.075477, 0.099800" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.050282;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.086254;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.050605;
    }
  }
}
