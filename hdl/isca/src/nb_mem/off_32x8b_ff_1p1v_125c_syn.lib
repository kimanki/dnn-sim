/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   OFF_64x8b
 *      Instance Name:  off_32x8b
 *      Words:          32
 *      Word Width:     8
 *      Mux:            1
 *      Corner:        ff_1p1v_125c
 *
 *      Creation Date:  Thu Nov 19 22:42:32 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(OFF_64x8b) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Thu Nov 19 22:42:32 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : 125.000;
  nom_voltage         : 1.100;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 0.46;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 1.1);
  voltage_map (VDDCE, 1.1);
  voltage_map (VSSE, 0);

  operating_conditions(ff_1p1v_125c) {
    process      : 1;
    temperature  : 125.000;
    voltage      : 1.100;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ff_1p1v_125c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(off_32x8b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (off_32x8b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 8;
    bit_from : 7;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_32x8b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_32x8b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 5;
    bit_from : 4;
    bit_to : 0 ;
    downto : true ;
  }
  cell(off_32x8b) {
    area : 6856.473000;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 5;
      word_width : 8;
    }
    bus(Q) {
      bus_type : off_32x8b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.291660, 0.296548, 0.301880, 0.312545, 0.344540, 0.397864, 0.451189", \
              "0.291449, 0.296337, 0.301670, 0.312334, 0.344329, 0.397654, 0.450978", \
              "0.290887, 0.295775, 0.301107, 0.311772, 0.343767, 0.397091, 0.450416", \
              "0.289903, 0.294791, 0.300123, 0.310788, 0.342783, 0.396107, 0.449432", \
              "0.286459, 0.291347, 0.296679, 0.307344, 0.339339, 0.392663, 0.445988", \
              "0.278024, 0.282912, 0.288245, 0.298909, 0.330904, 0.384229, 0.437553", \
              "0.261858, 0.266746, 0.272078, 0.282743, 0.314738, 0.368062, 0.421387" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.301689, 0.306567, 0.311888, 0.322530, 0.354458, 0.407670, 0.460882", \
              "0.301478, 0.306356, 0.311677, 0.322320, 0.354247, 0.407459, 0.460671", \
              "0.300916, 0.305794, 0.311115, 0.321757, 0.353684, 0.406896, 0.460108", \
              "0.299932, 0.304810, 0.310131, 0.320773, 0.352700, 0.405912, 0.459124", \
              "0.296488, 0.301365, 0.306687, 0.317329, 0.349256, 0.402468, 0.455680", \
              "0.288053, 0.292931, 0.298252, 0.308894, 0.340822, 0.394034, 0.447246", \
              "0.271887, 0.276765, 0.282086, 0.292728, 0.324655, 0.377867, 0.431079" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.331100, 0.335988, 0.341321, 0.351986, 0.383980, 0.437305, 0.490629", \
              "0.330889, 0.335777, 0.341110, 0.351775, 0.383769, 0.437094, 0.490418", \
              "0.330327, 0.335215, 0.340548, 0.351213, 0.383207, 0.436532, 0.489856", \
              "0.329343, 0.334231, 0.339564, 0.350228, 0.382223, 0.435548, 0.488872", \
              "0.325899, 0.330787, 0.336119, 0.346784, 0.378779, 0.432103, 0.485428", \
              "0.317464, 0.322352, 0.327685, 0.338350, 0.370344, 0.423669, 0.476993", \
              "0.301298, 0.306186, 0.311519, 0.322183, 0.354178, 0.407503, 0.460827" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.341129, 0.346007, 0.351328, 0.361971, 0.393898, 0.447110, 0.500322", \
              "0.340919, 0.345796, 0.351117, 0.361760, 0.393687, 0.446899, 0.500111", \
              "0.340356, 0.345234, 0.350555, 0.361198, 0.393125, 0.446337, 0.499549", \
              "0.339372, 0.344250, 0.349571, 0.360214, 0.392141, 0.445353, 0.498565", \
              "0.335928, 0.340806, 0.346127, 0.356769, 0.388697, 0.441909, 0.495121", \
              "0.327493, 0.332371, 0.337692, 0.348335, 0.380262, 0.433474, 0.486686", \
              "0.311327, 0.316205, 0.321526, 0.332169, 0.364096, 0.417308, 0.470520" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.402601, 0.407489, 0.412821, 0.423486, 0.455481, 0.508805, 0.562130", \
              "0.402390, 0.407278, 0.412611, 0.423275, 0.455270, 0.508595, 0.561919", \
              "0.401828, 0.406716, 0.412048, 0.422713, 0.454708, 0.508032, 0.561357", \
              "0.400844, 0.405732, 0.411064, 0.421729, 0.453724, 0.507048, 0.560373", \
              "0.397400, 0.402288, 0.407620, 0.418285, 0.450280, 0.503604, 0.556929", \
              "0.388965, 0.393853, 0.399185, 0.409850, 0.441845, 0.495170, 0.548494", \
              "0.372799, 0.377687, 0.383019, 0.393684, 0.425679, 0.479003, 0.532328" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.412630, 0.417508, 0.422829, 0.433471, 0.465399, 0.518611, 0.571823", \
              "0.412419, 0.417297, 0.422618, 0.433261, 0.465188, 0.518400, 0.571612", \
              "0.411857, 0.416735, 0.422056, 0.432698, 0.464625, 0.517837, 0.571049", \
              "0.410873, 0.415751, 0.421072, 0.431714, 0.463641, 0.516853, 0.570065", \
              "0.407429, 0.412306, 0.417628, 0.428270, 0.460197, 0.513409, 0.566621", \
              "0.398994, 0.403872, 0.409193, 0.419835, 0.451763, 0.504975, 0.558187", \
              "0.382828, 0.387706, 0.393027, 0.403669, 0.435596, 0.488808, 0.542020" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.439968, 0.444856, 0.450189, 0.460853, 0.492848, 0.546173, 0.599497", \
              "0.439757, 0.444645, 0.449978, 0.460643, 0.492637, 0.545962, 0.599286", \
              "0.439195, 0.444083, 0.449415, 0.460080, 0.492075, 0.545399, 0.598724", \
              "0.438211, 0.443099, 0.448431, 0.459096, 0.491091, 0.544415, 0.597740", \
              "0.434767, 0.439655, 0.444987, 0.455652, 0.487647, 0.540971, 0.594296", \
              "0.426332, 0.431220, 0.436553, 0.447218, 0.479212, 0.532537, 0.585861", \
              "0.410166, 0.415054, 0.420386, 0.431051, 0.463046, 0.516370, 0.569695" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.449997, 0.454875, 0.460196, 0.470839, 0.502766, 0.555978, 0.609190", \
              "0.449786, 0.454664, 0.459985, 0.470628, 0.502555, 0.555767, 0.608979", \
              "0.449224, 0.454102, 0.459423, 0.470065, 0.501993, 0.555205, 0.608417", \
              "0.448240, 0.453118, 0.458439, 0.469081, 0.501009, 0.554221, 0.607433", \
              "0.444796, 0.449674, 0.454995, 0.465637, 0.497564, 0.550776, 0.603988", \
              "0.436361, 0.441239, 0.446560, 0.457203, 0.489130, 0.542342, 0.595554", \
              "0.420195, 0.425073, 0.430394, 0.441036, 0.472964, 0.526176, 0.579388" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.020698, 0.034098, 0.048716, 0.077952, 0.165660, 0.311841, 0.458021");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.122792, 0.127680, 0.133012, 0.143677, 0.175672, 0.228996, 0.282321", \
              "0.122914, 0.127802, 0.133135, 0.143800, 0.175794, 0.229119, 0.282443", \
              "0.123241, 0.128129, 0.133461, 0.144126, 0.176121, 0.229445, 0.282770", \
              "0.123812, 0.128700, 0.134032, 0.144697, 0.176692, 0.230016, 0.283341", \
              "0.125811, 0.130699, 0.136032, 0.146696, 0.178691, 0.232016, 0.285340", \
              "0.130707, 0.135595, 0.140927, 0.151592, 0.183587, 0.236911, 0.290236", \
              "0.140091, 0.144979, 0.150311, 0.160976, 0.192971, 0.246295, 0.299620" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.018132, 0.030040, 0.043029, 0.069008, 0.146946, 0.276842, 0.406739");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(off_32x8b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.001283, 0.009946, 0.021826, 0.045585, 0.116865, 0.235665, 0.354465");
          }
          fall_power(off_32x8b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.033559, 0.033528, 0.033495, 0.033428, 0.033226, 0.032890, 0.032573");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012440;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.028 ;
      min_pulse_width_low : 0.077 ;
      min_period : 0.305 ;
      minimum_period() {
        constraint : 0.305 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.363 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 0.526 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.581 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.792866, 2.792866, 2.792866, 2.792866, 2.792866, 2.792866, 2.792866");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.042199, 0.042199, 0.042199, 0.042199, 0.042199, 0.042199, 0.042199");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.989731, 2.989731, 2.989731, 2.989731, 2.989731, 2.989731, 2.989731");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.062303, 0.062303, 0.062303, 0.062303, 0.062303, 0.062303, 0.062303");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.042424, 3.042424, 3.042424, 3.042424, 3.042424, 3.042424, 3.042424");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.036826, 0.036826, 0.036826, 0.036826, 0.036826, 0.036826, 0.036826");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.355474, 3.355474, 3.355474, 3.355474, 3.355474, 3.355474, 3.355474");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.034820, 0.034820, 0.034820, 0.034820, 0.034820, 0.034820, 0.034820");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.227802, 3.227802, 3.227802, 3.227802, 3.227802, 3.227802, 3.227802");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.029592, 0.029592, 0.029592, 0.029592, 0.029592, 0.029592, 0.029592");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.674855, 2.674855, 2.674855, 2.674855, 2.674855, 2.674855, 2.674855");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026174, 0.026174, 0.026174, 0.026174, 0.026174, 0.026174, 0.026174");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.807386, 2.807386, 2.807386, 2.807386, 2.807386, 2.807386, 2.807386");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026094, 0.026094, 0.026094, 0.026094, 0.026094, 0.026094, 0.026094");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("3.044531, 3.044531, 3.044531, 3.044531, 3.044531, 3.044531, 3.044531");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026536, 0.026536, 0.026536, 0.026536, 0.026536, 0.026536, 0.026536");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.549922, 2.549922, 2.549922, 2.549922, 2.549922, 2.549922, 2.549922");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.019624, 0.019624, 0.019624, 0.019624, 0.019624, 0.019624, 0.019624");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.588141, 2.588141, 2.588141, 2.588141, 2.588141, 2.588141, 2.588141");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.003167, 0.003167, 0.003167, 0.003167, 0.003167, 0.003167, 0.003167");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.547454, 2.547454, 2.547454, 2.547454, 2.547454, 2.547454, 2.547454");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.025432, 0.025432, 0.025432, 0.025432, 0.025432, 0.025432, 0.025432");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.592527, 2.592527, 2.592527, 2.592527, 2.592527, 2.592527, 2.592527");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.027345, 0.027345, 0.027345, 0.027345, 0.027345, 0.027345, 0.027345");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.547196, 2.547196, 2.547196, 2.547196, 2.547196, 2.547196, 2.547196");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.032608, 0.032608, 0.032608, 0.032608, 0.032608, 0.032608, 0.032608");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.608051, 2.608051, 2.608051, 2.608051, 2.608051, 2.608051, 2.608051");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.035604, 0.035604, 0.035604, 0.035604, 0.035604, 0.035604, 0.035604");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.551421, 2.551421, 2.551421, 2.551421, 2.551421, 2.551421, 2.551421");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.035310, 0.035310, 0.035310, 0.035310, 0.035310, 0.035310, 0.035310");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("2.536496, 2.536496, 2.536496, 2.536496, 2.536496, 2.536496, 2.536496");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.034843, 0.034843, 0.034843, 0.034843, 0.034843, 0.034843, 0.034843");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.017285, 0.017285, 0.017285, 0.017285, 0.017285, 0.017285, 0.017285");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.038744, 0.038744, 0.038744, 0.038744, 0.038744, 0.038744, 0.038744");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006350;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.026673, 0.026585, 0.026352, 0.025942, 0.024509, 0.021000, 0.014274", \
          "0.026884, 0.026796, 0.026562, 0.026153, 0.024720, 0.021211, 0.014484", \
          "0.027446, 0.027359, 0.027125, 0.026715, 0.025282, 0.021773, 0.015047", \
          "0.028430, 0.028343, 0.028109, 0.027699, 0.026266, 0.022757, 0.016031", \
          "0.031875, 0.031787, 0.031553, 0.031143, 0.029710, 0.026201, 0.019475", \
          "0.040309, 0.040221, 0.039987, 0.039578, 0.038145, 0.034636, 0.027909", \
          "0.056475, 0.056388, 0.056154, 0.055744, 0.054311, 0.050802, 0.044076" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.059521, 0.059725, 0.060267, 0.061217, 0.064540, 0.072678, 0.088277", \
          "0.059732, 0.059935, 0.060478, 0.061427, 0.064751, 0.072889, 0.088488", \
          "0.060294, 0.060498, 0.061040, 0.061990, 0.065313, 0.073451, 0.089050", \
          "0.061278, 0.061482, 0.062024, 0.062974, 0.066297, 0.074435, 0.090034", \
          "0.064722, 0.064926, 0.065468, 0.066418, 0.069741, 0.077880, 0.093478", \
          "0.073157, 0.073360, 0.073903, 0.074852, 0.078176, 0.086314, 0.101913", \
          "0.089323, 0.089527, 0.090069, 0.091019, 0.094342, 0.102480, 0.118079" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(off_32x8b_constraint_template) {
          index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          values ( \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882", \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882", \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882", \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882", \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882", \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882", \
            "0.187559, 0.187286, 0.186556, 0.185279, 0.180809, 0.169863, 0.148882" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.042298, 0.042164, 0.041809, 0.041187, 0.039010, 0.033679, 0.023461");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.043858, 0.043713, 0.043325, 0.042647, 0.040274, 0.034461, 0.023320");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011490;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.048776, 0.048847, 0.049036, 0.049366, 0.050523, 0.053357, 0.058787", \
          "0.048987, 0.049058, 0.049246, 0.049577, 0.050734, 0.053567, 0.058998", \
          "0.049549, 0.049620, 0.049809, 0.050139, 0.051296, 0.054130, 0.059560", \
          "0.050533, 0.050604, 0.050793, 0.051123, 0.052280, 0.055114, 0.060544", \
          "0.053977, 0.054048, 0.054237, 0.054567, 0.055724, 0.058558, 0.063989", \
          "0.062412, 0.062483, 0.062671, 0.063002, 0.064159, 0.066992, 0.072423", \
          "0.078578, 0.078649, 0.078838, 0.079168, 0.080325, 0.083159, 0.088589" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.069767, 0.069924, 0.070340, 0.071069, 0.073621, 0.079871, 0.091851", \
          "0.069978, 0.070134, 0.070551, 0.071280, 0.073832, 0.080082, 0.092062", \
          "0.070541, 0.070697, 0.071113, 0.071843, 0.074395, 0.080645, 0.092624", \
          "0.071525, 0.071681, 0.072097, 0.072827, 0.075379, 0.081629, 0.093608", \
          "0.074969, 0.075125, 0.075542, 0.076271, 0.078823, 0.085073, 0.097052", \
          "0.083403, 0.083560, 0.083976, 0.084705, 0.087257, 0.093507, 0.105487", \
          "0.099570, 0.099726, 0.100142, 0.100872, 0.103424, 0.109674, 0.121653" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.001397, 0.001326, 0.001137, 0.000807, 0.000000, 0.000000, 0.000000", \
          "0.001186, 0.001115, 0.000926, 0.000596, 0.000000, 0.000000, 0.000000", \
          "0.000624, 0.000553, 0.000364, 0.000033, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.002748, 0.002592, 0.002175, 0.001446, 0.000000, 0.000000, 0.000000", \
          "0.002537, 0.002381, 0.001964, 0.001235, 0.000000, 0.000000, 0.000000", \
          "0.001975, 0.001818, 0.001402, 0.000673, 0.000000, 0.000000, 0.000000", \
          "0.000991, 0.000834, 0.000418, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.223492, 0.223619, 0.223957, 0.224549, 0.226620, 0.231692, 0.241413");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.379064, 0.379246, 0.379732, 0.380583, 0.383562, 0.390855, 0.404834");
          }
      }
     }
    bus(A) {
      bus_type : off_32x8b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004114;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.089303, 0.089221, 0.089002, 0.088619, 0.087278, 0.083995, 0.077701", \
          "0.089514, 0.089432, 0.089213, 0.088830, 0.087489, 0.084205, 0.077912", \
          "0.090076, 0.089994, 0.089775, 0.089392, 0.088051, 0.084768, 0.078474", \
          "0.091060, 0.090978, 0.090759, 0.090376, 0.089035, 0.085752, 0.079459", \
          "0.094504, 0.094422, 0.094203, 0.093820, 0.092479, 0.089196, 0.082903", \
          "0.102939, 0.102857, 0.102638, 0.102255, 0.100914, 0.097630, 0.091337", \
          "0.119105, 0.119023, 0.118804, 0.118421, 0.117080, 0.113797, 0.107504" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.088259, 0.088555, 0.089343, 0.090722, 0.095548, 0.107369, 0.130025", \
          "0.088470, 0.088765, 0.089553, 0.090933, 0.095759, 0.107580, 0.130236", \
          "0.089032, 0.089328, 0.090116, 0.091495, 0.096322, 0.108142, 0.130798", \
          "0.090016, 0.090312, 0.091100, 0.092479, 0.097306, 0.109126, 0.131782", \
          "0.093460, 0.093756, 0.094544, 0.095923, 0.100750, 0.112570, 0.135226", \
          "0.101895, 0.102190, 0.102979, 0.104358, 0.109184, 0.121005, 0.143661", \
          "0.118061, 0.118357, 0.119145, 0.120524, 0.125351, 0.137171, 0.159827" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.013877, 0.013959, 0.014178, 0.014561, 0.015902, 0.019185, 0.025479", \
          "0.013666, 0.013748, 0.013967, 0.014350, 0.015691, 0.018975, 0.025268", \
          "0.013104, 0.013186, 0.013405, 0.013788, 0.015129, 0.018412, 0.024705", \
          "0.012120, 0.012202, 0.012421, 0.012804, 0.014145, 0.017428, 0.023721", \
          "0.008676, 0.008758, 0.008977, 0.009360, 0.010701, 0.013984, 0.020277", \
          "0.000241, 0.000323, 0.000542, 0.000925, 0.002266, 0.005549, 0.011843", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.021933, 0.021637, 0.020849, 0.019470, 0.014643, 0.002823, 0.000000", \
          "0.021722, 0.021426, 0.020638, 0.019259, 0.014432, 0.002612, 0.000000", \
          "0.021159, 0.020864, 0.020076, 0.018697, 0.013870, 0.002050, 0.000000", \
          "0.020175, 0.019880, 0.019092, 0.017713, 0.012886, 0.001066, 0.000000", \
          "0.016731, 0.016436, 0.015648, 0.014269, 0.009442, 0.000000, 0.000000", \
          "0.008297, 0.008001, 0.007213, 0.005834, 0.001007, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.095984, 0.096085, 0.096353, 0.096823, 0.098467, 0.102494, 0.110211");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.069649, 0.069724, 0.069926, 0.070278, 0.071512, 0.074534, 0.080327");
          }
      }
    }
    bus(D) {
      bus_type : off_32x8b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007419;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.002282", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.002493", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.003055", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.004039", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.007483", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.015918", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.009825, 0.032084" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.067844, 0.067554, 0.066780, 0.065425, 0.060683, 0.049069, 0.026810", \
          "0.067634, 0.067343, 0.066569, 0.065214, 0.060472, 0.048859, 0.026600", \
          "0.067071, 0.066781, 0.066007, 0.064652, 0.059910, 0.048296, 0.026037", \
          "0.066087, 0.065797, 0.065023, 0.063668, 0.058926, 0.047312, 0.025053", \
          "0.062643, 0.062353, 0.061579, 0.060224, 0.055482, 0.043868, 0.021609", \
          "0.054209, 0.053918, 0.053144, 0.051789, 0.047047, 0.035434, 0.013175", \
          "0.038042, 0.037752, 0.036978, 0.035623, 0.030881, 0.019267, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.059131, 0.059250, 0.059564, 0.060116, 0.062044, 0.066768, 0.075821", \
          "0.058921, 0.059039, 0.059354, 0.059905, 0.061833, 0.066557, 0.075610", \
          "0.058358, 0.058476, 0.058791, 0.059342, 0.061271, 0.065995, 0.075048", \
          "0.057374, 0.057492, 0.057807, 0.058358, 0.060287, 0.065010, 0.074064", \
          "0.053930, 0.054048, 0.054363, 0.054914, 0.056843, 0.061566, 0.070620", \
          "0.045496, 0.045614, 0.045929, 0.046480, 0.048408, 0.053132, 0.062185", \
          "0.029329, 0.029447, 0.029762, 0.030313, 0.032242, 0.036965, 0.046019" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.010887, 0.010998, 0.011294, 0.011813, 0.013630, 0.018078, 0.026605");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026058, 0.026206, 0.026600, 0.027290, 0.029705, 0.035619, 0.046955");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.011113, 0.011002, 0.010706, 0.010189, 0.008376, 0.003937, 0.004952");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.006920, 0.006772, 0.006377, 0.005686, 0.003267, 0.003008, 0.014343");
          }
       }
    }
    bus(EMA) {
      bus_type : off_32x8b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006449;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.307163" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.307163" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.307163" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457", \
          "0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.305457, 0.307163" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.009042;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.028171, 0.028013, 0.027592, 0.026855, 0.024275, 0.017958, 0.005850", \
          "0.028382, 0.028224, 0.027803, 0.027066, 0.024486, 0.018169, 0.006060", \
          "0.028944, 0.028786, 0.028365, 0.027628, 0.025048, 0.018731, 0.006623", \
          "0.029928, 0.029770, 0.029349, 0.028612, 0.026032, 0.019715, 0.007607", \
          "0.033372, 0.033214, 0.032793, 0.032056, 0.029476, 0.023159, 0.011051", \
          "0.041807, 0.041649, 0.041228, 0.040491, 0.037911, 0.031594, 0.019486", \
          "0.057973, 0.057815, 0.057394, 0.056657, 0.054077, 0.047760, 0.035652" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.056910, 0.057236, 0.058105, 0.059625, 0.064948, 0.077982, 0.102965", \
          "0.057121, 0.057447, 0.058316, 0.059836, 0.065159, 0.078193, 0.103175", \
          "0.057683, 0.058009, 0.058878, 0.060399, 0.065721, 0.078755, 0.103738", \
          "0.058667, 0.058993, 0.059862, 0.061383, 0.066705, 0.079739, 0.104722", \
          "0.062111, 0.062437, 0.063306, 0.064827, 0.070149, 0.083183, 0.108166", \
          "0.070546, 0.070872, 0.071741, 0.073261, 0.078584, 0.091618, 0.116601", \
          "0.086712, 0.087038, 0.087907, 0.089428, 0.094750, 0.107784, 0.132767" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.225322;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.468509;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.225324;
    }
  }
}
