/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   NB_2KB_64x128b
 *      Instance Name:  nb_64x128b
 *      Words:          64
 *      Word Width:     128
 *      Mux:            1
 *      Corner:        ff_1p1v_m40c
 *
 *      Creation Date:  Wed Nov 18 11:47:32 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(NB_2KB_64x128b) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Wed Nov 18 11:47:32 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : -40.000;
  nom_voltage         : 1.100;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 0.46;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 1.1);
  voltage_map (VDDCE, 1.1);
  voltage_map (VSSE, 0);

  operating_conditions(ff_1p1v_m40c) {
    process      : 1;
    temperature  : -40.000;
    voltage      : 1.100;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ff_1p1v_m40c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(nb_64x128b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x128b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x128b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (nb_64x128b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 128;
    bit_from : 127;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x128b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x128b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 6;
    bit_from : 5;
    bit_to : 0 ;
    downto : true ;
  }
  cell(nb_64x128b) {
    area : 26291.504250;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 6;
      word_width : 128;
    }
    bus(Q) {
      bus_type : nb_64x128b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.357973, 0.362486, 0.367408, 0.377252, 0.406786, 0.456009, 0.505232", \
              "0.357913, 0.362426, 0.367348, 0.377192, 0.406726, 0.455949, 0.505172", \
              "0.357753, 0.362265, 0.367188, 0.377032, 0.406566, 0.455789, 0.505012", \
              "0.357473, 0.361985, 0.366907, 0.376752, 0.406286, 0.455509, 0.504731", \
              "0.356492, 0.361005, 0.365927, 0.375771, 0.405305, 0.454528, 0.503751", \
              "0.354091, 0.358603, 0.363525, 0.373370, 0.402903, 0.452126, 0.501349", \
              "0.349488, 0.354000, 0.358922, 0.368767, 0.398300, 0.447523, 0.496746" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.366768, 0.370953, 0.375518, 0.384649, 0.412041, 0.457695, 0.503349", \
              "0.366708, 0.370893, 0.375458, 0.384589, 0.411981, 0.457635, 0.503289", \
              "0.366548, 0.370733, 0.375298, 0.384429, 0.411821, 0.457475, 0.503129", \
              "0.366268, 0.370453, 0.375018, 0.384149, 0.411541, 0.457195, 0.502848", \
              "0.365287, 0.369472, 0.374037, 0.383168, 0.410560, 0.456214, 0.501868", \
              "0.362885, 0.367070, 0.371636, 0.380766, 0.408159, 0.453812, 0.499466", \
              "0.358282, 0.362467, 0.367033, 0.376163, 0.403556, 0.449209, 0.494863" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.390891, 0.395403, 0.400326, 0.410170, 0.439704, 0.488927, 0.538149", \
              "0.390831, 0.395343, 0.400266, 0.410110, 0.439644, 0.488867, 0.538089", \
              "0.390671, 0.395183, 0.400105, 0.409950, 0.439484, 0.488707, 0.537929", \
              "0.390391, 0.394903, 0.399825, 0.409670, 0.439204, 0.488426, 0.537649", \
              "0.389410, 0.393922, 0.398845, 0.408689, 0.438223, 0.487446, 0.536668", \
              "0.387009, 0.391521, 0.396443, 0.406288, 0.435821, 0.485044, 0.534267", \
              "0.382405, 0.386918, 0.391840, 0.401684, 0.431218, 0.480441, 0.529664" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.399686, 0.403871, 0.408436, 0.417567, 0.444959, 0.490613, 0.536267", \
              "0.399626, 0.403811, 0.408376, 0.417507, 0.444899, 0.490553, 0.536206", \
              "0.399466, 0.403651, 0.408216, 0.417347, 0.444739, 0.490393, 0.536046", \
              "0.399185, 0.403370, 0.407936, 0.417067, 0.444459, 0.490112, 0.535766", \
              "0.398205, 0.402390, 0.406955, 0.416086, 0.443478, 0.489132, 0.534786", \
              "0.395803, 0.399988, 0.404553, 0.413684, 0.441076, 0.486730, 0.532384", \
              "0.391200, 0.395385, 0.399950, 0.409081, 0.436473, 0.482127, 0.527781" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.455239, 0.459752, 0.464674, 0.474518, 0.504052, 0.553275, 0.602498", \
              "0.455179, 0.459691, 0.464614, 0.474458, 0.503992, 0.553215, 0.602438", \
              "0.455019, 0.459531, 0.464454, 0.474298, 0.503832, 0.553055, 0.602277", \
              "0.454739, 0.459251, 0.464173, 0.474018, 0.503552, 0.552774, 0.601997", \
              "0.453758, 0.458270, 0.463193, 0.473037, 0.502571, 0.551794, 0.601017", \
              "0.451357, 0.455869, 0.460791, 0.470636, 0.500169, 0.549392, 0.598615", \
              "0.446754, 0.451266, 0.456188, 0.466033, 0.495566, 0.544789, 0.594012" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.464034, 0.468219, 0.472784, 0.481915, 0.509307, 0.554961, 0.600615", \
              "0.463974, 0.468159, 0.472724, 0.481855, 0.509247, 0.554901, 0.600555", \
              "0.463814, 0.467999, 0.472564, 0.481695, 0.509087, 0.554741, 0.600395", \
              "0.463534, 0.467719, 0.472284, 0.481415, 0.508807, 0.554461, 0.600114", \
              "0.462553, 0.466738, 0.471303, 0.480434, 0.507826, 0.553480, 0.599134", \
              "0.460151, 0.464336, 0.468902, 0.478032, 0.505425, 0.551078, 0.596732", \
              "0.455548, 0.459733, 0.464299, 0.473429, 0.500822, 0.546475, 0.592129" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.488101, 0.492613, 0.497535, 0.507380, 0.536913, 0.586136, 0.635359", \
              "0.488041, 0.492553, 0.497475, 0.507320, 0.536853, 0.586076, 0.635299", \
              "0.487880, 0.492393, 0.497315, 0.507159, 0.536693, 0.585916, 0.635139", \
              "0.487600, 0.492112, 0.497035, 0.506879, 0.536413, 0.585636, 0.634858", \
              "0.486620, 0.491132, 0.496054, 0.505899, 0.535432, 0.584655, 0.633878", \
              "0.484218, 0.488730, 0.493652, 0.503497, 0.533031, 0.582253, 0.631476", \
              "0.479615, 0.484127, 0.489049, 0.498894, 0.528427, 0.577650, 0.626873" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.496895, 0.501080, 0.505646, 0.514776, 0.542168, 0.587822, 0.633476", \
              "0.496835, 0.501020, 0.505585, 0.514716, 0.542108, 0.587762, 0.633416", \
              "0.496675, 0.500860, 0.505425, 0.514556, 0.541948, 0.587602, 0.633256", \
              "0.496395, 0.500580, 0.505145, 0.514276, 0.541668, 0.587322, 0.632976", \
              "0.495414, 0.499599, 0.504165, 0.513295, 0.540687, 0.586341, 0.631995", \
              "0.493013, 0.497198, 0.501763, 0.510894, 0.538286, 0.583940, 0.629593", \
              "0.488409, 0.492594, 0.497160, 0.506290, 0.533683, 0.579336, 0.624990" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(nb_64x128b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.200253, 0.204765, 0.209688, 0.219532, 0.249066, 0.298289, 0.347511", \
              "0.200382, 0.204895, 0.209817, 0.219661, 0.249195, 0.298418, 0.347641", \
              "0.200727, 0.205239, 0.210161, 0.220006, 0.249540, 0.298762, 0.347985", \
              "0.201330, 0.205842, 0.210764, 0.220609, 0.250143, 0.299365, 0.348588", \
              "0.203441, 0.207953, 0.212875, 0.222719, 0.252253, 0.301476, 0.350699", \
              "0.208609, 0.213121, 0.218043, 0.227888, 0.257422, 0.306644, 0.355867", \
              "0.218515, 0.223027, 0.227950, 0.237794, 0.267328, 0.316551, 0.365774" \
            );
          }
          fall_transition(nb_64x128b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(nb_64x128b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.012065, 0.024625, 0.038326, 0.065730, 0.147941, 0.284959, 0.421977");
          }
          fall_power(nb_64x128b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.033945, 0.033957, 0.033971, 0.033998, 0.034080, 0.034216, 0.034353");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012380;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.028 ;
      min_pulse_width_low : 0.067 ;
      min_period : 0.393 ;
      minimum_period() {
        constraint : 0.393 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.426 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 0.566 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.604 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("25.407333, 25.407333, 25.407333, 25.407333, 25.407333, 25.407333, 25.407333");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.050400, 0.050400, 0.050400, 0.050400, 0.050400, 0.050400, 0.050400");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("29.291391, 29.291391, 29.291391, 29.291391, 29.291391, 29.291391, 29.291391");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.051820, 0.051820, 0.051820, 0.051820, 0.051820, 0.051820, 0.051820");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("25.738696, 25.738696, 25.738696, 25.738696, 25.738696, 25.738696, 25.738696");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.051809, 0.051809, 0.051809, 0.051809, 0.051809, 0.051809, 0.051809");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("32.184660, 32.184660, 32.184660, 32.184660, 32.184660, 32.184660, 32.184660");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.054139, 0.054139, 0.054139, 0.054139, 0.054139, 0.054139, 0.054139");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("26.642954, 26.642954, 26.642954, 26.642954, 26.642954, 26.642954, 26.642954");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.050269, 0.050269, 0.050269, 0.050269, 0.050269, 0.050269, 0.050269");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("32.750834, 32.750834, 32.750834, 32.750834, 32.750834, 32.750834, 32.750834");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.050532, 0.050532, 0.050532, 0.050532, 0.050532, 0.050532, 0.050532");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("28.804008, 28.804008, 28.804008, 28.804008, 28.804008, 28.804008, 28.804008");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.052538, 0.052538, 0.052538, 0.052538, 0.052538, 0.052538, 0.052538");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("28.328997, 28.328997, 28.328997, 28.328997, 28.328997, 28.328997, 28.328997");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.049824, 0.049824, 0.049824, 0.049824, 0.049824, 0.049824, 0.049824");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("16.841964, 16.841964, 16.841964, 16.841964, 16.841964, 16.841964, 16.841964");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.033070, 0.033070, 0.033070, 0.033070, 0.033070, 0.033070, 0.033070");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("16.759433, 16.759433, 16.759433, 16.759433, 16.759433, 16.759433, 16.759433");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.031440, 0.031440, 0.031440, 0.031440, 0.031440, 0.031440, 0.031440");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.138525, 17.138525, 17.138525, 17.138525, 17.138525, 17.138525, 17.138525");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030887, 0.030887, 0.030887, 0.030887, 0.030887, 0.030887, 0.030887");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.388069, 17.388069, 17.388069, 17.388069, 17.388069, 17.388069, 17.388069");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.031682, 0.031682, 0.031682, 0.031682, 0.031682, 0.031682, 0.031682");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("17.596200, 17.596200, 17.596200, 17.596200, 17.596200, 17.596200, 17.596200");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.031973, 0.031973, 0.031973, 0.031973, 0.031973, 0.031973, 0.031973");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("18.186422, 18.186422, 18.186422, 18.186422, 18.186422, 18.186422, 18.186422");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.033361, 0.033361, 0.033361, 0.033361, 0.033361, 0.033361, 0.033361");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("18.663941, 18.663941, 18.663941, 18.663941, 18.663941, 18.663941, 18.663941");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030527, 0.030527, 0.030527, 0.030527, 0.030527, 0.030527, 0.030527");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("18.649501, 18.649501, 18.649501, 18.649501, 18.649501, 18.649501, 18.649501");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.031831, 0.031831, 0.031831, 0.031831, 0.031831, 0.031831, 0.031831");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.014111, 0.014111, 0.014111, 0.014111, 0.014111, 0.014111, 0.014111");
          }
          fall_power(nb_64x128b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.027717, 0.027717, 0.027717, 0.027717, 0.027717, 0.027717, 0.027717");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006388;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.009922, 0.009854, 0.009675, 0.009360, 0.008261, 0.005567, 0.000405", \
          "0.009982, 0.009914, 0.009735, 0.009421, 0.008321, 0.005627, 0.000465", \
          "0.010142, 0.010074, 0.009895, 0.009581, 0.008481, 0.005788, 0.000625", \
          "0.010422, 0.010355, 0.010175, 0.009861, 0.008761, 0.006068, 0.000905", \
          "0.011403, 0.011335, 0.011156, 0.010841, 0.009742, 0.007048, 0.001886", \
          "0.013804, 0.013737, 0.013557, 0.013243, 0.012143, 0.009450, 0.004288", \
          "0.018407, 0.018340, 0.018160, 0.017846, 0.016746, 0.014053, 0.008891" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.043624, 0.043808, 0.044299, 0.045157, 0.048162, 0.055522, 0.069629", \
          "0.043684, 0.043868, 0.044359, 0.045217, 0.048222, 0.055582, 0.069689", \
          "0.043844, 0.044028, 0.044519, 0.045377, 0.048383, 0.055742, 0.069849", \
          "0.044124, 0.044308, 0.044799, 0.045658, 0.048663, 0.056023, 0.070129", \
          "0.045105, 0.045289, 0.045780, 0.046638, 0.049643, 0.057003, 0.071110", \
          "0.047507, 0.047690, 0.048181, 0.049040, 0.052045, 0.059405, 0.073511", \
          "0.052110, 0.052294, 0.052784, 0.053643, 0.056648, 0.064008, 0.078114" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(nb_64x128b_constraint_template) {
          index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          values ( \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785", \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785", \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785", \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785", \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785", \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785", \
            "0.236627, 0.236373, 0.235697, 0.234513, 0.230371, 0.220228, 0.200785" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.021799, 0.021728, 0.021539, 0.021210, 0.020055, 0.017228, 0.011809");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.021824, 0.021818, 0.021803, 0.021776, 0.021683, 0.021455, 0.021018");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011520;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.120052, 0.120122, 0.120309, 0.120637, 0.121783, 0.124590, 0.129970", \
          "0.120112, 0.120182, 0.120370, 0.120697, 0.121843, 0.124650, 0.130031", \
          "0.120272, 0.120343, 0.120530, 0.120857, 0.122003, 0.124810, 0.130191", \
          "0.120553, 0.120623, 0.120810, 0.121137, 0.122284, 0.125091, 0.130471", \
          "0.121533, 0.121603, 0.121791, 0.122118, 0.123264, 0.126071, 0.131451", \
          "0.123935, 0.124005, 0.124192, 0.124520, 0.125666, 0.128473, 0.133853", \
          "0.128538, 0.128608, 0.128795, 0.129123, 0.130269, 0.133076, 0.138456" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.142797, 0.142969, 0.143426, 0.144226, 0.147026, 0.153884, 0.167029", \
          "0.142857, 0.143029, 0.143486, 0.144286, 0.147086, 0.153944, 0.167089", \
          "0.143017, 0.143189, 0.143646, 0.144446, 0.147246, 0.154104, 0.167249", \
          "0.143297, 0.143469, 0.143926, 0.144726, 0.147527, 0.154385, 0.167529", \
          "0.144278, 0.144450, 0.144907, 0.145707, 0.148507, 0.155365, 0.168510", \
          "0.146680, 0.146851, 0.147308, 0.148109, 0.150909, 0.157767, 0.170912", \
          "0.151283, 0.151454, 0.151912, 0.152712, 0.155512, 0.162370, 0.175515" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("1.102196, 1.102254, 1.102410, 1.102682, 1.103633, 1.105964, 1.110431");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("1.868989, 1.869104, 1.869412, 1.869949, 1.871832, 1.876442, 1.885278");
          }
      }
     }
    bus(A) {
      bus_type : nb_64x128b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004150;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.076190, 0.076155, 0.076061, 0.075898, 0.075326, 0.073926, 0.071243", \
          "0.076250, 0.076215, 0.076121, 0.075958, 0.075386, 0.073986, 0.071303", \
          "0.076410, 0.076375, 0.076281, 0.076118, 0.075546, 0.074146, 0.071463", \
          "0.076690, 0.076655, 0.076562, 0.076398, 0.075827, 0.074426, 0.071743", \
          "0.077671, 0.077636, 0.077542, 0.077379, 0.076807, 0.075407, 0.072724", \
          "0.080072, 0.080037, 0.079944, 0.079781, 0.079209, 0.077809, 0.075125", \
          "0.084675, 0.084640, 0.084547, 0.084384, 0.083812, 0.082412, 0.079728" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.077057, 0.077312, 0.077993, 0.079185, 0.083354, 0.093566, 0.113139", \
          "0.077117, 0.077372, 0.078053, 0.079245, 0.083414, 0.093626, 0.113199", \
          "0.077277, 0.077533, 0.078213, 0.079405, 0.083575, 0.093786, 0.113359", \
          "0.077557, 0.077813, 0.078494, 0.079685, 0.083855, 0.094066, 0.113639", \
          "0.078538, 0.078793, 0.079474, 0.080666, 0.084835, 0.095047, 0.114620", \
          "0.080940, 0.081195, 0.081876, 0.083067, 0.087237, 0.097449, 0.117021", \
          "0.085543, 0.085798, 0.086479, 0.087670, 0.091840, 0.102052, 0.121624" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.020422, 0.020457, 0.020551, 0.020714, 0.021286, 0.022686, 0.025369", \
          "0.020362, 0.020397, 0.020491, 0.020654, 0.021226, 0.022626, 0.025309", \
          "0.020202, 0.020237, 0.020331, 0.020494, 0.021066, 0.022466, 0.025149", \
          "0.019922, 0.019957, 0.020050, 0.020214, 0.020785, 0.022186, 0.024869", \
          "0.018941, 0.018976, 0.019070, 0.019233, 0.019805, 0.021205, 0.023888", \
          "0.016540, 0.016575, 0.016668, 0.016832, 0.017403, 0.018803, 0.021487", \
          "0.011937, 0.011972, 0.012065, 0.012228, 0.012800, 0.014200, 0.016884" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.026615, 0.026360, 0.025679, 0.024488, 0.020318, 0.010106, 0.000000", \
          "0.026555, 0.026300, 0.025619, 0.024428, 0.020258, 0.010046, 0.000000", \
          "0.026395, 0.026140, 0.025459, 0.024268, 0.020098, 0.009886, 0.000000", \
          "0.026115, 0.025860, 0.025179, 0.023988, 0.019818, 0.009606, 0.000000", \
          "0.025134, 0.024879, 0.024198, 0.023007, 0.018837, 0.008625, 0.000000", \
          "0.022733, 0.022478, 0.021797, 0.020605, 0.016436, 0.006224, 0.000000", \
          "0.018130, 0.017874, 0.017194, 0.016002, 0.011832, 0.001621, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.096850, 0.096863, 0.096896, 0.096954, 0.097157, 0.097656, 0.098611");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.062610, 0.062813, 0.063354, 0.064302, 0.067620, 0.075744, 0.091316");
          }
      }
    }
    bus(D) {
      bus_type : nb_64x128b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007465;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.079925, 0.079665, 0.078971, 0.077757, 0.073508, 0.063101, 0.043156", \
          "0.079865, 0.079605, 0.078911, 0.077697, 0.073448, 0.063041, 0.043096", \
          "0.079705, 0.079445, 0.078751, 0.077537, 0.073288, 0.062881, 0.042936", \
          "0.079425, 0.079164, 0.078471, 0.077257, 0.073007, 0.062601, 0.042655", \
          "0.078444, 0.078184, 0.077490, 0.076276, 0.072027, 0.061620, 0.041675", \
          "0.076042, 0.075782, 0.075088, 0.073874, 0.069625, 0.059219, 0.039273", \
          "0.071439, 0.071179, 0.070485, 0.069271, 0.065022, 0.054616, 0.034670" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.073121, 0.073180, 0.073337, 0.073611, 0.074571, 0.076921, 0.081426", \
          "0.073061, 0.073120, 0.073277, 0.073551, 0.074511, 0.076861, 0.081366", \
          "0.072901, 0.072960, 0.073117, 0.073391, 0.074351, 0.076701, 0.081206", \
          "0.072621, 0.072680, 0.072836, 0.073111, 0.074070, 0.076421, 0.080926", \
          "0.071640, 0.071699, 0.071856, 0.072130, 0.073090, 0.075440, 0.079945", \
          "0.069239, 0.069297, 0.069454, 0.069728, 0.070688, 0.073039, 0.077543", \
          "0.064636, 0.064694, 0.064851, 0.065125, 0.066085, 0.068435, 0.072940" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.010480, 0.010529, 0.010661, 0.010892, 0.011699, 0.013675, 0.017464");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.024821, 0.024913, 0.025159, 0.025588, 0.027091, 0.030771, 0.037826");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.002224, 0.002175, 0.002043, 0.001812, 0.001004, 0.001269, 0.005058");
          }
          fall_power(nb_64x128b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.002987, 0.003079, 0.003325, 0.003754, 0.005257, 0.008937, 0.015992");
          }
       }
    }
    bus(EMA) {
      bus_type : nb_64x128b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006486;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.388294, 0.388465, 0.388922, 0.389722, 0.392523, 0.399381, 0.412525", \
          "0.388354, 0.388525, 0.388982, 0.389782, 0.392583, 0.399441, 0.412585", \
          "0.388514, 0.388685, 0.389142, 0.389943, 0.392743, 0.399601, 0.412746", \
          "0.388794, 0.388965, 0.389423, 0.390223, 0.393023, 0.399881, 0.413026", \
          "0.389775, 0.389946, 0.390403, 0.391203, 0.394004, 0.400862, 0.414006", \
          "0.392176, 0.392348, 0.392805, 0.393605, 0.396405, 0.403263, 0.416408", \
          "0.396779, 0.396951, 0.397408, 0.398208, 0.401008, 0.407867, 0.421011" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.388294, 0.388465, 0.388922, 0.389722, 0.392523, 0.399381, 0.412525", \
          "0.388354, 0.388525, 0.388982, 0.389782, 0.392583, 0.399441, 0.412585", \
          "0.388514, 0.388685, 0.389142, 0.389943, 0.392743, 0.399601, 0.412746", \
          "0.388794, 0.388965, 0.389423, 0.390223, 0.393023, 0.399881, 0.413026", \
          "0.389775, 0.389946, 0.390403, 0.391203, 0.394004, 0.400862, 0.414006", \
          "0.392176, 0.392348, 0.392805, 0.393605, 0.396405, 0.403263, 0.416408", \
          "0.396779, 0.396951, 0.397408, 0.398208, 0.401008, 0.407867, 0.421011" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.388294, 0.388465, 0.388922, 0.389722, 0.392523, 0.399381, 0.412525", \
          "0.388354, 0.388525, 0.388982, 0.389782, 0.392583, 0.399441, 0.412585", \
          "0.388514, 0.388685, 0.389142, 0.389943, 0.392743, 0.399601, 0.412746", \
          "0.388794, 0.388965, 0.389423, 0.390223, 0.393023, 0.399881, 0.413026", \
          "0.389775, 0.389946, 0.390403, 0.391203, 0.394004, 0.400862, 0.414006", \
          "0.392176, 0.392348, 0.392805, 0.393605, 0.396405, 0.403263, 0.416408", \
          "0.396779, 0.396951, 0.397408, 0.398208, 0.401008, 0.407867, 0.421011" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.388294, 0.388465, 0.388922, 0.389722, 0.392523, 0.399381, 0.412525", \
          "0.388354, 0.388525, 0.388982, 0.389782, 0.392583, 0.399441, 0.412585", \
          "0.388514, 0.388685, 0.389142, 0.389943, 0.392743, 0.399601, 0.412746", \
          "0.388794, 0.388965, 0.389423, 0.390223, 0.393023, 0.399881, 0.413026", \
          "0.389775, 0.389946, 0.390403, 0.391203, 0.394004, 0.400862, 0.414006", \
          "0.392176, 0.392348, 0.392805, 0.393605, 0.396405, 0.403263, 0.416408", \
          "0.396779, 0.396951, 0.397408, 0.398208, 0.401008, 0.407867, 0.421011" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.008957;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.011406, 0.011269, 0.010904, 0.010265, 0.008029, 0.002551, 0.000000", \
          "0.011466, 0.011329, 0.010964, 0.010325, 0.008089, 0.002611, 0.000000", \
          "0.011626, 0.011490, 0.011124, 0.010485, 0.008249, 0.002772, 0.000000", \
          "0.011907, 0.011770, 0.011405, 0.010766, 0.008529, 0.003052, 0.000000", \
          "0.012887, 0.012750, 0.012385, 0.011746, 0.009510, 0.004032, 0.000000", \
          "0.015289, 0.015152, 0.014787, 0.014148, 0.011911, 0.006434, 0.000000", \
          "0.019892, 0.019755, 0.019390, 0.018751, 0.016514, 0.011037, 0.000539" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.040867, 0.041181, 0.042016, 0.043477, 0.048593, 0.061122, 0.085134", \
          "0.040927, 0.041241, 0.042076, 0.043537, 0.048653, 0.061182, 0.085194", \
          "0.041087, 0.041401, 0.042236, 0.043698, 0.048813, 0.061342, 0.085354", \
          "0.041368, 0.041681, 0.042516, 0.043978, 0.049094, 0.061622, 0.085635", \
          "0.042348, 0.042662, 0.043497, 0.044958, 0.050074, 0.062603, 0.086615", \
          "0.044750, 0.045063, 0.045898, 0.047360, 0.052476, 0.065004, 0.089017", \
          "0.049353, 0.049666, 0.050502, 0.051963, 0.057079, 0.069607, 0.093620" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x128b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.054046;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.057046;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.054719;
    }
  }
}
