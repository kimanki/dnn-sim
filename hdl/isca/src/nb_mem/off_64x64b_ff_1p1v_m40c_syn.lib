/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   USERLIB
 *      Instance Name:  off_64x64b
 *      Words:          64
 *      Word Width:     64
 *      Mux:            1
 *      Corner:        ff_1p1v_m40c
 *
 *      Creation Date:  Thu Nov 19 14:54:16 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Thu Nov 19 14:54:16 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : -40.000;
  nom_voltage         : 1.100;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 0.46;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 1.1);
  voltage_map (VDDCE, 1.1);
  voltage_map (VSSE, 0);

  operating_conditions(ff_1p1v_m40c) {
    process      : 1;
    temperature  : -40.000;
    voltage      : 1.100;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ff_1p1v_m40c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(off_64x64b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_64x64b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_64x64b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (off_64x64b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 64;
    bit_from : 63;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_64x64b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_64x64b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 6;
    bit_from : 5;
    bit_to : 0 ;
    downto : true ;
  }
  cell(off_64x64b) {
    area : 16688.591150;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 6;
      word_width : 64;
    }
    bus(Q) {
      bus_type : off_64x64b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.318301, 0.322813, 0.327735, 0.337580, 0.367113, 0.416336, 0.465559", \
              "0.318241, 0.322753, 0.327675, 0.337519, 0.367053, 0.416276, 0.465499", \
              "0.318080, 0.322593, 0.327515, 0.337359, 0.366893, 0.416116, 0.465339", \
              "0.317800, 0.322312, 0.327235, 0.337079, 0.366613, 0.415836, 0.465058", \
              "0.316820, 0.321332, 0.326254, 0.336099, 0.365632, 0.414855, 0.464078", \
              "0.314418, 0.318930, 0.323852, 0.333697, 0.363231, 0.412453, 0.461676", \
              "0.309815, 0.314327, 0.319249, 0.329094, 0.358627, 0.407850, 0.457073" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.326810, 0.330995, 0.335560, 0.344691, 0.372083, 0.417737, 0.463390", \
              "0.326750, 0.330934, 0.335500, 0.344631, 0.372023, 0.417677, 0.463330", \
              "0.326589, 0.330774, 0.335340, 0.344470, 0.371863, 0.417516, 0.463170", \
              "0.326309, 0.330494, 0.335060, 0.344190, 0.371583, 0.417236, 0.462890", \
              "0.325329, 0.329514, 0.334079, 0.343210, 0.370602, 0.416256, 0.461909", \
              "0.322927, 0.327112, 0.331677, 0.340808, 0.368200, 0.413854, 0.459508", \
              "0.318324, 0.322509, 0.327074, 0.336205, 0.363597, 0.409251, 0.454905" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.351266, 0.355778, 0.360700, 0.370545, 0.400079, 0.449301, 0.498524", \
              "0.351206, 0.355718, 0.360640, 0.370485, 0.400019, 0.449241, 0.498464", \
              "0.351046, 0.355558, 0.360480, 0.370325, 0.399858, 0.449081, 0.498304", \
              "0.350766, 0.355278, 0.360200, 0.370045, 0.399578, 0.448801, 0.498024", \
              "0.349785, 0.354297, 0.359219, 0.369064, 0.398598, 0.447820, 0.497043", \
              "0.347383, 0.351895, 0.356818, 0.366662, 0.396196, 0.445419, 0.494642", \
              "0.342780, 0.347292, 0.352215, 0.362059, 0.391593, 0.440816, 0.490038" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.359775, 0.363960, 0.368525, 0.377656, 0.405048, 0.450702, 0.496356", \
              "0.359715, 0.363900, 0.368465, 0.377596, 0.404988, 0.450642, 0.496296", \
              "0.359555, 0.363740, 0.368305, 0.377436, 0.404828, 0.450482, 0.496136", \
              "0.359275, 0.363460, 0.368025, 0.377156, 0.404548, 0.450202, 0.495855", \
              "0.358294, 0.362479, 0.367044, 0.376175, 0.403567, 0.449221, 0.494875", \
              "0.355892, 0.360077, 0.364643, 0.373773, 0.401166, 0.446819, 0.492473", \
              "0.351289, 0.355474, 0.360040, 0.369170, 0.396562, 0.442216, 0.487870" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.415658, 0.420171, 0.425093, 0.434937, 0.464471, 0.513694, 0.562917", \
              "0.415598, 0.420111, 0.425033, 0.434877, 0.464411, 0.513634, 0.562857", \
              "0.415438, 0.419950, 0.424873, 0.434717, 0.464251, 0.513474, 0.562697", \
              "0.415158, 0.419670, 0.424592, 0.434437, 0.463971, 0.513194, 0.562416", \
              "0.414177, 0.418690, 0.423612, 0.433456, 0.462990, 0.512213, 0.561436", \
              "0.411776, 0.416288, 0.421210, 0.431055, 0.460588, 0.509811, 0.559034", \
              "0.407173, 0.411685, 0.416607, 0.426452, 0.455985, 0.505208, 0.554431" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.424167, 0.428352, 0.432918, 0.442048, 0.469441, 0.515094, 0.560748", \
              "0.424107, 0.428292, 0.432858, 0.441988, 0.469381, 0.515034, 0.560688", \
              "0.423947, 0.428132, 0.432698, 0.441828, 0.469221, 0.514874, 0.560528", \
              "0.423667, 0.427852, 0.432417, 0.441548, 0.468940, 0.514594, 0.560248", \
              "0.422686, 0.426871, 0.431437, 0.440567, 0.467960, 0.513613, 0.559267", \
              "0.420285, 0.424470, 0.429035, 0.438166, 0.465558, 0.511212, 0.556866", \
              "0.415682, 0.419867, 0.424432, 0.433563, 0.460955, 0.506609, 0.552262" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.448471, 0.452984, 0.457906, 0.467750, 0.497284, 0.546507, 0.595730", \
              "0.448411, 0.452923, 0.457846, 0.467690, 0.497224, 0.546447, 0.595670", \
              "0.448251, 0.452763, 0.457686, 0.467530, 0.497064, 0.546287, 0.595509", \
              "0.447971, 0.452483, 0.457405, 0.467250, 0.496784, 0.546007, 0.595229", \
              "0.446990, 0.451503, 0.456425, 0.466269, 0.495803, 0.545026, 0.594249", \
              "0.444589, 0.449101, 0.454023, 0.463868, 0.493401, 0.542624, 0.591847", \
              "0.439986, 0.444498, 0.449420, 0.459265, 0.488798, 0.538021, 0.587244" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.456980, 0.461165, 0.465731, 0.474861, 0.502254, 0.547907, 0.593561", \
              "0.456920, 0.461105, 0.465671, 0.474801, 0.502194, 0.547847, 0.593501", \
              "0.456760, 0.460945, 0.465511, 0.474641, 0.502034, 0.547687, 0.593341", \
              "0.456480, 0.460665, 0.465230, 0.474361, 0.501753, 0.547407, 0.593061", \
              "0.455499, 0.459684, 0.464250, 0.473380, 0.500773, 0.546426, 0.592080", \
              "0.453098, 0.457283, 0.461848, 0.470979, 0.498371, 0.544025, 0.589678", \
              "0.448495, 0.452680, 0.457245, 0.466376, 0.493768, 0.539422, 0.585075" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.014699, 0.026683, 0.039756, 0.065902, 0.144339, 0.275068, 0.405797");
          }
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(off_64x64b_mem_out_delay_template) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.152454, 0.156966, 0.161888, 0.171733, 0.201266, 0.250489, 0.299712", \
              "0.152583, 0.157095, 0.162017, 0.171862, 0.201395, 0.250618, 0.299841", \
              "0.152927, 0.157440, 0.162362, 0.172206, 0.201740, 0.250963, 0.300186", \
              "0.153530, 0.158043, 0.162965, 0.172809, 0.202343, 0.251566, 0.300789", \
              "0.155641, 0.160153, 0.165075, 0.174920, 0.204454, 0.253676, 0.302899", \
              "0.160809, 0.165321, 0.170244, 0.180088, 0.209622, 0.258845, 0.308068", \
              "0.170716, 0.175228, 0.180150, 0.189995, 0.219528, 0.268751, 0.317974" \
            );
          }
          fall_transition(off_64x64b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.013438, 0.023392, 0.034251, 0.055969, 0.121124, 0.229715, 0.338306");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(off_64x64b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.012065, 0.024625, 0.038326, 0.065730, 0.147941, 0.284959, 0.421977");
          }
          fall_power(off_64x64b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.033945, 0.033957, 0.033971, 0.033998, 0.034080, 0.034216, 0.034353");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012380;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.028 ;
      min_pulse_width_low : 0.067 ;
      min_period : 0.319 ;
      minimum_period() {
        constraint : 0.319 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.378 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 0.523 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.566 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("13.264651, 13.264651, 13.264651, 13.264651, 13.264651, 13.264651, 13.264651");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.040102, 0.040102, 0.040102, 0.040102, 0.040102, 0.040102, 0.040102");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("15.074368, 15.074368, 15.074368, 15.074368, 15.074368, 15.074368, 15.074368");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.040297, 0.040297, 0.040297, 0.040297, 0.040297, 0.040297, 0.040297");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("13.842044, 13.842044, 13.842044, 13.842044, 13.842044, 13.842044, 13.842044");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.040212, 0.040212, 0.040212, 0.040212, 0.040212, 0.040212, 0.040212");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("16.646817, 16.646817, 16.646817, 16.646817, 16.646817, 16.646817, 16.646817");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.041034, 0.041034, 0.041034, 0.041034, 0.041034, 0.041034, 0.041034");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("14.038025, 14.038025, 14.038025, 14.038025, 14.038025, 14.038025, 14.038025");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039824, 0.039824, 0.039824, 0.039824, 0.039824, 0.039824, 0.039824");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("16.806506, 16.806506, 16.806506, 16.806506, 16.806506, 16.806506, 16.806506");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039632, 0.039632, 0.039632, 0.039632, 0.039632, 0.039632, 0.039632");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("14.958183, 14.958183, 14.958183, 14.958183, 14.958183, 14.958183, 14.958183");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.040482, 0.040482, 0.040482, 0.040482, 0.040482, 0.040482, 0.040482");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("15.041235, 15.041235, 15.041235, 15.041235, 15.041235, 15.041235, 15.041235");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.039198, 0.039198, 0.039198, 0.039198, 0.039198, 0.039198, 0.039198");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.095260, 9.095260, 9.095260, 9.095260, 9.095260, 9.095260, 9.095260");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.031362, 0.031362, 0.031362, 0.031362, 0.031362, 0.031362, 0.031362");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.052713, 9.052713, 9.052713, 9.052713, 9.052713, 9.052713, 9.052713");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.029972, 0.029972, 0.029972, 0.029972, 0.029972, 0.029972, 0.029972");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.465588, 9.465588, 9.465588, 9.465588, 9.465588, 9.465588, 9.465588");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030145, 0.030145, 0.030145, 0.030145, 0.030145, 0.030145, 0.030145");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.428208, 9.428208, 9.428208, 9.428208, 9.428208, 9.428208, 9.428208");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030300, 0.030300, 0.030300, 0.030300, 0.030300, 0.030300, 0.030300");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.486291, 9.486291, 9.486291, 9.486291, 9.486291, 9.486291, 9.486291");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030320, 0.030320, 0.030320, 0.030320, 0.030320, 0.030320, 0.030320");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("9.818447, 9.818447, 9.818447, 9.818447, 9.818447, 9.818447, 9.818447");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030791, 0.030791, 0.030791, 0.030791, 0.030791, 0.030791, 0.030791");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("10.049821, 10.049821, 10.049821, 10.049821, 10.049821, 10.049821, 10.049821");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.029928, 0.029928, 0.029928, 0.029928, 0.029928, 0.029928, 0.029928");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("10.047837, 10.047837, 10.047837, 10.047837, 10.047837, 10.047837, 10.047837");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.030035, 0.030035, 0.030035, 0.030035, 0.030035, 0.030035, 0.030035");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.007526, 0.007526, 0.007526, 0.007526, 0.007526, 0.007526, 0.007526");
          }
          fall_power(off_64x64b_energy_template_clkslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.026203, 0.026203, 0.026203, 0.026203, 0.026203, 0.026203, 0.026203");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006388;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.009922, 0.009854, 0.009675, 0.009360, 0.008261, 0.005567, 0.000405", \
          "0.009982, 0.009914, 0.009735, 0.009421, 0.008321, 0.005627, 0.000465", \
          "0.010142, 0.010074, 0.009895, 0.009581, 0.008481, 0.005788, 0.000625", \
          "0.010422, 0.010355, 0.010175, 0.009861, 0.008761, 0.006068, 0.000905", \
          "0.011403, 0.011335, 0.011156, 0.010841, 0.009742, 0.007048, 0.001886", \
          "0.013804, 0.013737, 0.013557, 0.013243, 0.012143, 0.009450, 0.004288", \
          "0.018407, 0.018340, 0.018160, 0.017846, 0.016746, 0.014053, 0.008891" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.043624, 0.043808, 0.044299, 0.045157, 0.048162, 0.055522, 0.069629", \
          "0.043684, 0.043868, 0.044359, 0.045217, 0.048222, 0.055582, 0.069689", \
          "0.043844, 0.044028, 0.044519, 0.045377, 0.048383, 0.055742, 0.069849", \
          "0.044124, 0.044308, 0.044799, 0.045658, 0.048663, 0.056023, 0.070129", \
          "0.045105, 0.045289, 0.045780, 0.046638, 0.049643, 0.057003, 0.071110", \
          "0.047507, 0.047690, 0.048181, 0.049040, 0.052045, 0.059405, 0.073511", \
          "0.052110, 0.052294, 0.052784, 0.053643, 0.056648, 0.064008, 0.078114" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(off_64x64b_constraint_template) {
          index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
          values ( \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727", \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727", \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727", \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727", \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727", \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727", \
            "0.193568, 0.193315, 0.192639, 0.191455, 0.187313, 0.177169, 0.157727" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.007220, 0.007149, 0.006961, 0.006631, 0.005477, 0.002649, 0.003027");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.004734, 0.004728, 0.004713, 0.004686, 0.004593, 0.004365, 0.003928");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011520;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.078978, 0.079048, 0.079235, 0.079562, 0.080709, 0.083516, 0.088896", \
          "0.079038, 0.079108, 0.079295, 0.079622, 0.080769, 0.083576, 0.088956", \
          "0.079198, 0.079268, 0.079455, 0.079783, 0.080929, 0.083736, 0.089116", \
          "0.079478, 0.079548, 0.079735, 0.080063, 0.081209, 0.084016, 0.089396", \
          "0.080459, 0.080529, 0.080716, 0.081043, 0.082190, 0.084997, 0.090377", \
          "0.082860, 0.082930, 0.083118, 0.083445, 0.084591, 0.087398, 0.092779", \
          "0.087463, 0.087534, 0.087721, 0.088048, 0.089194, 0.092001, 0.097382" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.091726, 0.091897, 0.092355, 0.093155, 0.095955, 0.102813, 0.115958", \
          "0.091786, 0.091957, 0.092415, 0.093215, 0.096015, 0.102873, 0.116018", \
          "0.091946, 0.092118, 0.092575, 0.093375, 0.096175, 0.103033, 0.116178", \
          "0.092226, 0.092398, 0.092855, 0.093655, 0.096455, 0.103313, 0.116458", \
          "0.093207, 0.093378, 0.093836, 0.094636, 0.097436, 0.104294, 0.117439", \
          "0.095609, 0.095780, 0.096237, 0.097037, 0.099838, 0.106696, 0.119840", \
          "0.100212, 0.100383, 0.100840, 0.101640, 0.104441, 0.111299, 0.124443" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.584869, 0.584927, 0.585083, 0.585355, 0.586306, 0.588637, 0.593104");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.986213, 0.986329, 0.986636, 0.987174, 0.989056, 0.993666, 1.002502");
          }
      }
     }
    bus(A) {
      bus_type : off_64x64b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004150;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.077452, 0.077417, 0.077324, 0.077160, 0.076589, 0.075189, 0.072505", \
          "0.077512, 0.077477, 0.077384, 0.077221, 0.076649, 0.075249, 0.072565", \
          "0.077672, 0.077637, 0.077544, 0.077381, 0.076809, 0.075409, 0.072725", \
          "0.077952, 0.077917, 0.077824, 0.077661, 0.077089, 0.075689, 0.073006", \
          "0.078933, 0.078898, 0.078805, 0.078641, 0.078070, 0.076670, 0.073986", \
          "0.081335, 0.081300, 0.081206, 0.081043, 0.080471, 0.079071, 0.076388", \
          "0.085938, 0.085903, 0.085810, 0.085646, 0.085075, 0.083674, 0.080991" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.078012, 0.078267, 0.078948, 0.080139, 0.084309, 0.094521, 0.114093", \
          "0.078072, 0.078327, 0.079008, 0.080199, 0.084369, 0.094581, 0.114153", \
          "0.078232, 0.078487, 0.079168, 0.080359, 0.084529, 0.094741, 0.114313", \
          "0.078512, 0.078767, 0.079448, 0.080639, 0.084809, 0.095021, 0.114593", \
          "0.079493, 0.079748, 0.080429, 0.081620, 0.085790, 0.096002, 0.115574", \
          "0.081894, 0.082149, 0.082830, 0.084022, 0.088191, 0.098403, 0.117976", \
          "0.086497, 0.086753, 0.087433, 0.088625, 0.092795, 0.103006, 0.122579" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.015565, 0.015600, 0.015693, 0.015856, 0.016428, 0.017828, 0.020512", \
          "0.015505, 0.015540, 0.015633, 0.015796, 0.016368, 0.017768, 0.020452", \
          "0.015345, 0.015380, 0.015473, 0.015636, 0.016208, 0.017608, 0.020291", \
          "0.015064, 0.015099, 0.015193, 0.015356, 0.015928, 0.017328, 0.020011", \
          "0.014084, 0.014119, 0.014212, 0.014375, 0.014947, 0.016347, 0.019031", \
          "0.011682, 0.011717, 0.011810, 0.011974, 0.012545, 0.013945, 0.016629", \
          "0.007079, 0.007114, 0.007207, 0.007371, 0.007942, 0.009342, 0.012026" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.021758, 0.021502, 0.020822, 0.019630, 0.015460, 0.005249, 0.000000", \
          "0.021698, 0.021442, 0.020762, 0.019570, 0.015400, 0.005189, 0.000000", \
          "0.021537, 0.021282, 0.020601, 0.019410, 0.015240, 0.005028, 0.000000", \
          "0.021257, 0.021002, 0.020321, 0.019130, 0.014960, 0.004748, 0.000000", \
          "0.020277, 0.020021, 0.019341, 0.018149, 0.013979, 0.003768, 0.000000", \
          "0.017875, 0.017620, 0.016939, 0.015748, 0.011578, 0.001366, 0.000000", \
          "0.013272, 0.013017, 0.012336, 0.011144, 0.006975, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.100528, 0.100541, 0.100574, 0.100632, 0.100836, 0.101334, 0.102289");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.067263, 0.067466, 0.068008, 0.068956, 0.072273, 0.080397, 0.095969");
          }
      }
    }
    bus(D) {
      bus_type : off_64x64b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007465;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.072442, 0.072181, 0.071488, 0.070274, 0.066024, 0.055618, 0.035672", \
          "0.072382, 0.072121, 0.071428, 0.070214, 0.065964, 0.055558, 0.035612", \
          "0.072221, 0.071961, 0.071268, 0.070053, 0.065804, 0.055398, 0.035452", \
          "0.071941, 0.071681, 0.070987, 0.069773, 0.065524, 0.055118, 0.035172", \
          "0.070961, 0.070700, 0.070007, 0.068793, 0.064543, 0.054137, 0.034191", \
          "0.068559, 0.068299, 0.067605, 0.066391, 0.062142, 0.051735, 0.031790", \
          "0.063956, 0.063696, 0.063002, 0.061788, 0.057539, 0.047132, 0.027187" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.065638, 0.065697, 0.065853, 0.066128, 0.067087, 0.069438, 0.073943", \
          "0.065578, 0.065637, 0.065793, 0.066068, 0.067027, 0.069378, 0.073883", \
          "0.065418, 0.065477, 0.065633, 0.065908, 0.066867, 0.069218, 0.073723", \
          "0.065138, 0.065196, 0.065353, 0.065627, 0.066587, 0.068937, 0.073442", \
          "0.064157, 0.064216, 0.064372, 0.064647, 0.065606, 0.067957, 0.072462", \
          "0.061755, 0.061814, 0.061971, 0.062245, 0.063205, 0.065555, 0.070060", \
          "0.057152, 0.057211, 0.057368, 0.057642, 0.058602, 0.060952, 0.065457" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.010372, 0.010421, 0.010553, 0.010784, 0.011591, 0.013568, 0.017356");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.024825, 0.024918, 0.025163, 0.025592, 0.027095, 0.030776, 0.037830");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.002256, 0.002206, 0.002074, 0.001843, 0.001035, 0.001235, 0.005023");
          }
          fall_power(off_64x64b_energy_template_sigslew) {
            index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
            values ("0.002864, 0.002956, 0.003201, 0.003630, 0.005133, 0.008814, 0.015868");
          }
       }
    }
    bus(EMA) {
      bus_type : off_64x64b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006486;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326367", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326427", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326587", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326868", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.327848", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.330250", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.321708, 0.334853" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326367", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326427", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326587", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326868", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.327848", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.330250", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.321708, 0.334853" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326367", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326427", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326587", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326868", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.327848", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.330250", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.321708, 0.334853" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326367", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326427", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326587", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.326868", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.327848", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.330250", \
          "0.318683, 0.318683, 0.318683, 0.318683, 0.318683, 0.321708, 0.334853" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.008957;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.011406, 0.011269, 0.010904, 0.010265, 0.008029, 0.002551, 0.000000", \
          "0.011466, 0.011329, 0.010964, 0.010325, 0.008089, 0.002611, 0.000000", \
          "0.011626, 0.011490, 0.011124, 0.010485, 0.008249, 0.002772, 0.000000", \
          "0.011907, 0.011770, 0.011405, 0.010766, 0.008529, 0.003052, 0.000000", \
          "0.012887, 0.012750, 0.012385, 0.011746, 0.009510, 0.004032, 0.000000", \
          "0.015289, 0.015152, 0.014787, 0.014148, 0.011911, 0.006434, 0.000000", \
          "0.019892, 0.019755, 0.019390, 0.018751, 0.016514, 0.011037, 0.000539" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.040867, 0.041181, 0.042016, 0.043477, 0.048593, 0.061122, 0.085134", \
          "0.040927, 0.041241, 0.042076, 0.043537, 0.048653, 0.061182, 0.085194", \
          "0.041087, 0.041401, 0.042236, 0.043698, 0.048813, 0.061342, 0.085354", \
          "0.041368, 0.041681, 0.042516, 0.043978, 0.049094, 0.061622, 0.085635", \
          "0.042348, 0.042662, 0.043497, 0.044958, 0.050074, 0.062603, 0.086615", \
          "0.044750, 0.045063, 0.045898, 0.047360, 0.052476, 0.065004, 0.089017", \
          "0.049353, 0.049666, 0.050502, 0.051963, 0.057079, 0.069607, 0.093620" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_64x64b_constraint_template) {
        index_1 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        index_2 ("0.036, 0.039, 0.047, 0.061, 0.110, 0.230, 0.460");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.030684;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.032855;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.03098;
    }
  }
}
