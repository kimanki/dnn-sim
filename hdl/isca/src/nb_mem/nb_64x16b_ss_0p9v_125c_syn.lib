/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   NB_64x16b
 *      Instance Name:  nb_64x16b
 *      Words:          64
 *      Word Width:     16
 *      Mux:            1
 *      Corner:        ss_0p9v_125c
 *
 *      Creation Date:  Thu Nov 19 22:33:54 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(NB_64x16b) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Thu Nov 19 22:33:54 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : 125.000;
  nom_voltage         : 0.900;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 1;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 0.9);
  voltage_map (VDDCE, 0.9);
  voltage_map (VSSE, 0);

  operating_conditions(ss_0p9v_125c) {
    process      : 1;
    temperature  : 125.000;
    voltage      : 0.900;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ss_0p9v_125c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(nb_64x16b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(nb_64x16b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(nb_64x16b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (nb_64x16b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 16;
    bit_from : 15;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x16b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (nb_64x16b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 6;
    bit_from : 5;
    bit_to : 0 ;
    downto : true ;
  }
  cell(nb_64x16b) {
    area : 9609.800200;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 6;
      word_width : 16;
    }
    bus(Q) {
      bus_type : nb_64x16b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.745767, 0.754799, 0.764653, 0.784360, 0.843481, 0.942018, 1.040554", \
              "0.746588, 0.755620, 0.765474, 0.785181, 0.844303, 0.942839, 1.041375", \
              "0.748230, 0.757263, 0.767116, 0.786823, 0.845945, 0.944481, 1.043017", \
              "0.750694, 0.759726, 0.769580, 0.789287, 0.848409, 0.946945, 1.045481", \
              "0.758085, 0.767117, 0.776971, 0.796678, 0.855799, 0.954336, 1.052872", \
              "0.778615, 0.787647, 0.797501, 0.817208, 0.876330, 0.974866, 1.073402", \
              "0.820496, 0.829528, 0.839382, 0.859089, 0.918211, 1.016747, 1.115283" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.769224, 0.777952, 0.787473, 0.806515, 0.863641, 0.958851, 1.054061", \
              "0.770045, 0.778773, 0.788294, 0.807336, 0.864462, 0.959672, 1.054882", \
              "0.771688, 0.780415, 0.789936, 0.808978, 0.866104, 0.961314, 1.056525", \
              "0.774151, 0.782879, 0.792400, 0.811442, 0.868568, 0.963778, 1.058988", \
              "0.781542, 0.790270, 0.799791, 0.818833, 0.875959, 0.971169, 1.066379", \
              "0.802072, 0.810800, 0.820321, 0.839363, 0.896489, 0.991699, 1.086909", \
              "0.843953, 0.852681, 0.862202, 0.881244, 0.938370, 1.033580, 1.128790" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.825058, 0.834091, 0.843944, 0.863652, 0.922773, 1.021309, 1.119845", \
              "0.825879, 0.834912, 0.844766, 0.864473, 0.923594, 1.022130, 1.120667", \
              "0.827522, 0.836554, 0.846408, 0.866115, 0.925237, 1.023773, 1.122309", \
              "0.829985, 0.839018, 0.848872, 0.868579, 0.927700, 1.026236, 1.124773", \
              "0.837376, 0.846409, 0.856262, 0.875970, 0.935091, 1.033627, 1.132163", \
              "0.857906, 0.866939, 0.876792, 0.896500, 0.955621, 1.054157, 1.152693", \
              "0.899788, 0.908820, 0.918674, 0.938381, 0.997502, 1.096038, 1.194575" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.848516, 0.857243, 0.866764, 0.885806, 0.942932, 1.038143, 1.133353", \
              "0.849337, 0.858065, 0.867586, 0.886628, 0.943754, 1.038964, 1.134174", \
              "0.850979, 0.859707, 0.869228, 0.888270, 0.945396, 1.040606, 1.135816", \
              "0.853443, 0.862171, 0.871692, 0.890734, 0.947860, 1.043070, 1.138280", \
              "0.860834, 0.869561, 0.879082, 0.898124, 0.955250, 1.050461, 1.145671", \
              "0.881364, 0.890091, 0.899612, 0.918654, 0.975780, 1.070991, 1.166201", \
              "0.923245, 0.931973, 0.941494, 0.960536, 1.017662, 1.112872, 1.208082" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "1.019556, 1.028588, 1.038442, 1.058149, 1.117271, 1.215807, 1.314343", \
              "1.020377, 1.029410, 1.039263, 1.058970, 1.118092, 1.216628, 1.315164", \
              "1.022019, 1.031052, 1.040906, 1.060613, 1.119734, 1.218270, 1.316807", \
              "1.024483, 1.033516, 1.043369, 1.063076, 1.122198, 1.220734, 1.319270", \
              "1.031874, 1.040906, 1.050760, 1.070467, 1.129589, 1.228125, 1.326661", \
              "1.052404, 1.061436, 1.071290, 1.090997, 1.150119, 1.248655, 1.347191", \
              "1.094285, 1.103318, 1.113171, 1.132878, 1.192000, 1.290536, 1.389072" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "1.043013, 1.051741, 1.061262, 1.080304, 1.137430, 1.232640, 1.327850", \
              "1.043835, 1.052562, 1.062083, 1.081125, 1.138251, 1.233461, 1.328671", \
              "1.045477, 1.054205, 1.063726, 1.082768, 1.139894, 1.235104, 1.330314", \
              "1.047941, 1.056668, 1.066189, 1.085231, 1.142357, 1.237567, 1.332777", \
              "1.055331, 1.064059, 1.073580, 1.092622, 1.149748, 1.244958, 1.340168", \
              "1.075861, 1.084589, 1.094110, 1.113152, 1.170278, 1.265488, 1.360698", \
              "1.117743, 1.126470, 1.135991, 1.155033, 1.212159, 1.307369, 1.402580" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "1.128067, 1.137099, 1.146953, 1.166660, 1.225782, 1.324318, 1.422854", \
              "1.128888, 1.137920, 1.147774, 1.167481, 1.226603, 1.325139, 1.423675", \
              "1.130530, 1.139563, 1.149416, 1.169124, 1.228245, 1.326781, 1.425317", \
              "1.132994, 1.142026, 1.151880, 1.171587, 1.230709, 1.329245, 1.427781", \
              "1.140385, 1.149417, 1.159271, 1.178978, 1.238100, 1.336636, 1.435172", \
              "1.160915, 1.169947, 1.179801, 1.199508, 1.258630, 1.357166, 1.455702", \
              "1.202796, 1.211829, 1.221682, 1.241389, 1.300511, 1.399047, 1.497583" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "1.151524, 1.160252, 1.169773, 1.188815, 1.245941, 1.341151, 1.436361", \
              "1.152346, 1.161073, 1.170594, 1.189636, 1.246762, 1.341972, 1.437182", \
              "1.153988, 1.162716, 1.172237, 1.191279, 1.248405, 1.343615, 1.438825", \
              "1.156452, 1.165179, 1.174700, 1.193742, 1.250868, 1.346078, 1.441288", \
              "1.163842, 1.172570, 1.182091, 1.201133, 1.258259, 1.353469, 1.448679", \
              "1.184372, 1.193100, 1.202621, 1.221663, 1.278789, 1.373999, 1.469209", \
              "1.226254, 1.234981, 1.244502, 1.263544, 1.320670, 1.415880, 1.511090" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(nb_64x16b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.262651, 0.271683, 0.281537, 0.301244, 0.360366, 0.458902, 0.557438", \
              "0.263068, 0.272100, 0.281954, 0.301661, 0.360783, 0.459319, 0.557855", \
              "0.263902, 0.272934, 0.282788, 0.302495, 0.361617, 0.460153, 0.558689", \
              "0.265153, 0.274185, 0.284039, 0.303746, 0.362867, 0.461404, 0.559940", \
              "0.268905, 0.277937, 0.287791, 0.307498, 0.366620, 0.465156, 0.563692", \
              "0.279328, 0.288361, 0.298214, 0.317922, 0.377043, 0.475579, 0.574115", \
              "0.300592, 0.309624, 0.319478, 0.339185, 0.398307, 0.496843, 0.595379" \
            );
          }
          fall_transition(nb_64x16b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(nb_64x16b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.007470, 0.014887, 0.022979, 0.039162, 0.087712, 0.168628, 0.249545");
          }
          fall_power(nb_64x16b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.009097, 0.009156, 0.009222, 0.009352, 0.009744, 0.010396, 0.011049");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012040;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.057 ;
      min_pulse_width_low : 0.175 ;
      min_period : 1.439 ;
      minimum_period() {
        constraint : 0.711 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.826 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 1.287 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 1.439 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.729454, 2.729454, 2.729454, 2.729454, 2.729454, 2.729454, 2.729454");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022053, 0.022053, 0.022053, 0.022053, 0.022053, 0.022053, 0.022053");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.673585, 2.673585, 2.673585, 2.673585, 2.673585, 2.673585, 2.673585");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.023190, 0.023190, 0.023190, 0.023190, 0.023190, 0.023190, 0.023190");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.754928, 2.754928, 2.754928, 2.754928, 2.754928, 2.754928, 2.754928");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022544, 0.022544, 0.022544, 0.022544, 0.022544, 0.022544, 0.022544");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.793361, 2.793361, 2.793361, 2.793361, 2.793361, 2.793361, 2.793361");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022389, 0.022389, 0.022389, 0.022389, 0.022389, 0.022389, 0.022389");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.775310, 2.775310, 2.775310, 2.775310, 2.775310, 2.775310, 2.775310");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021957, 0.021957, 0.021957, 0.021957, 0.021957, 0.021957, 0.021957");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.807487, 2.807487, 2.807487, 2.807487, 2.807487, 2.807487, 2.807487");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021921, 0.021921, 0.021921, 0.021921, 0.021921, 0.021921, 0.021921");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.753331, 2.753331, 2.753331, 2.753331, 2.753331, 2.753331, 2.753331");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022409, 0.022409, 0.022409, 0.022409, 0.022409, 0.022409, 0.022409");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.795877, 2.795877, 2.795877, 2.795877, 2.795877, 2.795877, 2.795877");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022406, 0.022406, 0.022406, 0.022406, 0.022406, 0.022406, 0.022406");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.069226, 2.069226, 2.069226, 2.069226, 2.069226, 2.069226, 2.069226");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020201, 0.020201, 0.020201, 0.020201, 0.020201, 0.020201, 0.020201");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.121832, 2.121832, 2.121832, 2.121832, 2.121832, 2.121832, 2.121832");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021505, 0.021505, 0.021505, 0.021505, 0.021505, 0.021505, 0.021505");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.157099, 2.157099, 2.157099, 2.157099, 2.157099, 2.157099, 2.157099");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020626, 0.020626, 0.020626, 0.020626, 0.020626, 0.020626, 0.020626");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.192302, 2.192302, 2.192302, 2.192302, 2.192302, 2.192302, 2.192302");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020408, 0.020408, 0.020408, 0.020408, 0.020408, 0.020408, 0.020408");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.241254, 2.241254, 2.241254, 2.241254, 2.241254, 2.241254, 2.241254");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020110, 0.020110, 0.020110, 0.020110, 0.020110, 0.020110, 0.020110");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.328964, 2.328964, 2.328964, 2.328964, 2.328964, 2.328964, 2.328964");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020454, 0.020454, 0.020454, 0.020454, 0.020454, 0.020454, 0.020454");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.271093, 2.271093, 2.271093, 2.271093, 2.271093, 2.271093, 2.271093");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020521, 0.020521, 0.020521, 0.020521, 0.020521, 0.020521, 0.020521");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("2.349558, 2.349558, 2.349558, 2.349558, 2.349558, 2.349558, 2.349558");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020514, 0.020514, 0.020514, 0.020514, 0.020514, 0.020514, 0.020514");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.003647, 0.003647, 0.003647, 0.003647, 0.003647, 0.003647, 0.003647");
          }
          fall_power(nb_64x16b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.015591, 0.015591, 0.015591, 0.015591, 0.015591, 0.015591, 0.015591");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006281;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.048865, 0.049651, 0.051223, 0.053580, 0.060653, 0.080299, 0.120376", \
          "0.048044, 0.048830, 0.050402, 0.052759, 0.059832, 0.079477, 0.119555", \
          "0.046402, 0.047188, 0.048759, 0.051117, 0.058189, 0.077835, 0.117912", \
          "0.043938, 0.044724, 0.046296, 0.048653, 0.055726, 0.075371, 0.115449", \
          "0.036547, 0.037333, 0.038905, 0.041262, 0.048335, 0.067981, 0.108058", \
          "0.016017, 0.016803, 0.018375, 0.020732, 0.027805, 0.047451, 0.087528", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.005569, 0.045647" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.127262, 0.127821, 0.128939, 0.130615, 0.135643, 0.149612, 0.178107", \
          "0.126441, 0.127000, 0.128117, 0.129794, 0.134822, 0.148790, 0.177286", \
          "0.124799, 0.125358, 0.126475, 0.128151, 0.133180, 0.147148, 0.175643", \
          "0.122335, 0.122894, 0.124011, 0.125688, 0.130716, 0.144684, 0.173180", \
          "0.114944, 0.115503, 0.116621, 0.118297, 0.123325, 0.137294, 0.165789", \
          "0.094414, 0.094973, 0.096091, 0.097767, 0.102795, 0.116764, 0.145259", \
          "0.052533, 0.053092, 0.054209, 0.055886, 0.060914, 0.074882, 0.103378" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.006334, 0.005548, 0.003976, 0.001619, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000846, 0.000287, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.042727, 0.042168, 0.041051, 0.039374, 0.034346, 0.020378, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(nb_64x16b_constraint_template) {
          index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
          index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
          values ( \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145", \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145", \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145", \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145", \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145", \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145", \
            "0.376742, 0.376504, 0.376030, 0.375318, 0.373182, 0.367249, 0.355145" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.004026, 0.004049, 0.004093, 0.004160, 0.004361, 0.004920, 0.006059");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.007070, 0.007084, 0.007110, 0.007150, 0.007269, 0.007599, 0.008272");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011400;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.131981, 0.132879, 0.134675, 0.137368, 0.145449, 0.167896, 0.213687", \
          "0.131160, 0.132058, 0.133853, 0.136547, 0.144628, 0.167075, 0.212866", \
          "0.129517, 0.130415, 0.132211, 0.134905, 0.142985, 0.165432, 0.211224", \
          "0.127054, 0.127952, 0.129747, 0.132441, 0.140522, 0.162969, 0.208760", \
          "0.119663, 0.120561, 0.122357, 0.125050, 0.133131, 0.155578, 0.201369", \
          "0.099133, 0.100031, 0.101827, 0.104520, 0.112601, 0.135048, 0.180839", \
          "0.057252, 0.058150, 0.059945, 0.062639, 0.070720, 0.093167, 0.138958" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.151997, 0.152807, 0.154428, 0.156858, 0.164151, 0.184408, 0.225732", \
          "0.151176, 0.151986, 0.153606, 0.156037, 0.163330, 0.183587, 0.224911", \
          "0.149533, 0.150343, 0.151964, 0.154395, 0.161687, 0.181944, 0.223269", \
          "0.147070, 0.147880, 0.149500, 0.151931, 0.159224, 0.179481, 0.220805", \
          "0.139679, 0.140489, 0.142110, 0.144540, 0.151833, 0.172090, 0.213414", \
          "0.119149, 0.119959, 0.121580, 0.124010, 0.131303, 0.151560, 0.192884", \
          "0.077268, 0.078078, 0.079698, 0.082129, 0.089422, 0.109679, 0.151003" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.012984, 0.012086, 0.010290, 0.007597, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.031833, 0.031023, 0.029402, 0.026971, 0.019679, 0.000000, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.135406, 0.135386, 0.135346, 0.135286, 0.135107, 0.134610, 0.133596");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.239271, 0.239289, 0.239325, 0.239379, 0.239541, 0.239992, 0.240910");
          }
      }
     }
    bus(A) {
      bus_type : nb_64x16b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004097;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.217305, 0.218176, 0.219918, 0.222531, 0.230369, 0.252143, 0.296561", \
          "0.216484, 0.217355, 0.219096, 0.221709, 0.229548, 0.251321, 0.295740", \
          "0.214841, 0.215712, 0.217454, 0.220067, 0.227905, 0.249679, 0.294097", \
          "0.212378, 0.213249, 0.214990, 0.217603, 0.225442, 0.247215, 0.291634", \
          "0.204987, 0.205858, 0.207600, 0.210213, 0.218051, 0.239825, 0.284243", \
          "0.184457, 0.185328, 0.187070, 0.189683, 0.197521, 0.219295, 0.263713", \
          "0.142576, 0.143447, 0.145188, 0.147801, 0.155640, 0.177413, 0.221831" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.217512, 0.218894, 0.221660, 0.225809, 0.238254, 0.272824, 0.343348", \
          "0.216690, 0.218073, 0.220839, 0.224987, 0.237433, 0.272003, 0.342527", \
          "0.215048, 0.216431, 0.219197, 0.223345, 0.235790, 0.270361, 0.340884", \
          "0.212584, 0.213967, 0.216733, 0.220881, 0.233327, 0.267897, 0.338421", \
          "0.205194, 0.206576, 0.209342, 0.213491, 0.225936, 0.260506, 0.331030", \
          "0.184664, 0.186046, 0.188812, 0.192961, 0.205406, 0.239976, 0.310500", \
          "0.142782, 0.144165, 0.146931, 0.151079, 0.163525, 0.198095, 0.268618" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000258, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.001079, 0.000208, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.002721, 0.001850, 0.000108, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.005185, 0.004314, 0.002572, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.012576, 0.011705, 0.009963, 0.007350, 0.000000, 0.000000, 0.000000", \
          "0.033106, 0.032235, 0.030493, 0.027880, 0.020041, 0.000000, 0.000000", \
          "0.074987, 0.074116, 0.072374, 0.069761, 0.061923, 0.040149, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000769, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.001591, 0.000208, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.003233, 0.001850, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.005697, 0.004314, 0.001548, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.013087, 0.011705, 0.008939, 0.004791, 0.000000, 0.000000, 0.000000", \
          "0.033617, 0.032235, 0.029469, 0.025321, 0.012875, 0.000000, 0.000000", \
          "0.075499, 0.074116, 0.071350, 0.067202, 0.054756, 0.020186, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.054917, 0.054905, 0.054881, 0.054846, 0.054740, 0.054446, 0.053845");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.049662, 0.049724, 0.049848, 0.050033, 0.050590, 0.052135, 0.055289");
          }
      }
    }
    bus(D) {
      bus_type : nb_64x16b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007398;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.034603", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.033782", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.032140", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.029676", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.022285", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.001755", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.012804", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.011982", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.010340", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.007876", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000486", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.100692, 0.099467, 0.097018, 0.093344, 0.082321, 0.051703, 0.000000", \
          "0.101513, 0.100289, 0.097839, 0.094165, 0.083142, 0.052524, 0.000000", \
          "0.103156, 0.101931, 0.099482, 0.095807, 0.084785, 0.054167, 0.000000", \
          "0.105619, 0.104395, 0.101945, 0.098271, 0.087248, 0.056630, 0.000000", \
          "0.113010, 0.111785, 0.109336, 0.105662, 0.094639, 0.064021, 0.001560", \
          "0.133540, 0.132315, 0.129866, 0.126192, 0.115169, 0.084551, 0.022090", \
          "0.175421, 0.174197, 0.171747, 0.168073, 0.157051, 0.126432, 0.063971" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.080654, 0.079938, 0.078504, 0.076354, 0.069904, 0.051986, 0.015433", \
          "0.081476, 0.080759, 0.079325, 0.077175, 0.070725, 0.052807, 0.016254", \
          "0.083118, 0.082401, 0.080968, 0.078818, 0.072367, 0.054449, 0.017896", \
          "0.085582, 0.084865, 0.083431, 0.081281, 0.074831, 0.056913, 0.020360", \
          "0.092972, 0.092256, 0.090822, 0.088672, 0.082222, 0.064304, 0.027751", \
          "0.113502, 0.112786, 0.111352, 0.109202, 0.102752, 0.084834, 0.048281", \
          "0.155384, 0.154667, 0.153234, 0.151083, 0.144633, 0.126715, 0.090162" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.007013, 0.007022, 0.007040, 0.007068, 0.007150, 0.007378, 0.007842");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.016677, 0.016720, 0.016808, 0.016939, 0.017332, 0.018425, 0.020653");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.001047, 0.001037, 0.001017, 0.000987, 0.000898, 0.000649, 0.000142");
          }
          fall_power(nb_64x16b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.002029, 0.002073, 0.002160, 0.002291, 0.002684, 0.003777, 0.006005");
          }
       }
    }
    bus(EMA) {
      bus_type : nb_64x16b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.007751;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267", \
          "0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267, 0.711267" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.008717;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.048544, 0.049651, 0.051866, 0.055187, 0.065152, 0.092833, 0.149302", \
          "0.047723, 0.048830, 0.051044, 0.054366, 0.064331, 0.092012, 0.148481", \
          "0.046080, 0.047188, 0.049402, 0.052724, 0.062689, 0.090370, 0.146838", \
          "0.043617, 0.044724, 0.046938, 0.050260, 0.060225, 0.087906, 0.144375", \
          "0.036226, 0.037333, 0.039548, 0.042869, 0.052834, 0.080515, 0.136984", \
          "0.015696, 0.016803, 0.019018, 0.022339, 0.032304, 0.059985, 0.116454", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.018104, 0.074573" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.126846, 0.127821, 0.129773, 0.132700, 0.141480, 0.165872, 0.215631", \
          "0.126024, 0.127000, 0.128951, 0.131878, 0.140659, 0.165051, 0.214810", \
          "0.124382, 0.125358, 0.127309, 0.130236, 0.139017, 0.163408, 0.213167", \
          "0.121918, 0.122894, 0.124845, 0.127772, 0.136553, 0.160945, 0.210704", \
          "0.114528, 0.115503, 0.117455, 0.120382, 0.129162, 0.153554, 0.203313", \
          "0.093998, 0.094973, 0.096925, 0.099851, 0.108632, 0.133024, 0.182783", \
          "0.052116, 0.053092, 0.055043, 0.057970, 0.066751, 0.091143, 0.140902" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.006012, 0.005548, 0.004619, 0.003226, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(nb_64x16b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000429, 0.000287, 0.000003, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.042310, 0.042168, 0.041884, 0.041459, 0.040183, 0.036638, 0.029406" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 0.019554;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.025193;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 0.01956;
    }
  }
}
