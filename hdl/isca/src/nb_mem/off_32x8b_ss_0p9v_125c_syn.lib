/* FE Release Version: 2.2.12 */
/*
 *       CONFIDENTIAL AND PROPRIETARY SOFTWARE OF ARM PHYSICAL IP, INC.
 *      
 *       Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.
 *      
 *       Use of this Software is subject to the terms and conditions of the
 *       applicable license agreement with ARM Physical IP, Inc.
 *       In addition, this Software is protected by patents, copyright law 
 *       and international treaties.
 *      
 *       The copyright notice(s) in this Software does not indicate actual or
 *       intended publication of this Software.
 *      name:
 *
 *      version:
 *      comment:
 *      configuration:
 *
 *      Synopsys model for Synchronous Single-Port Register File
 *
 *      Library Name:   OFF_64x8b
 *      Instance Name:  off_32x8b
 *      Words:          32
 *      Word Width:     8
 *      Mux:            1
 *      Corner:        ss_0p9v_125c
 *
 *      Creation Date:  Thu Nov 19 22:42:29 2015
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(OFF_64x8b) {
  delay_model         : table_lookup;
  revision            : 1.1;        
  date                : "Thu Nov 19 22:42:29 2015";
  comment             : "Copyright (c) 1993 - 2015 ARM Physical IP, Inc.  All Rights Reserved.";
  time_unit           : "1ns";
  voltage_unit        : "1V";
  current_unit        : "1mA";
  leakage_power_unit  : "1mW";
  nom_process         : 1;
  nom_temperature     : 125.000;
  nom_voltage         : 0.900;
  capacitive_load_unit(1,pf);

  pulling_resistance_unit                : "1kohm";

  /* additional header data */
  default_cell_leakage_power    : 0;
  default_fanout_load           : 1;
  default_inout_pin_cap         : 0.005;
  default_input_pin_cap         : 0.005;
  default_output_pin_cap        : 0.0;
  default_max_transition        : 1;

  /* default attributes */
  default_leakage_power_density : 0.0;
  slew_derate_from_library      : 1.000;
  slew_lower_threshold_pct_fall : 10.000;
  slew_upper_threshold_pct_fall : 90.000;
  slew_lower_threshold_pct_rise : 10.000;
  slew_upper_threshold_pct_rise : 90.000;
  input_threshold_pct_fall      : 50.000;
  input_threshold_pct_rise      : 50.000;
  output_threshold_pct_fall     : 50.000;
  output_threshold_pct_rise     : 50.000;

  /* k-factors */
  k_process_cell_fall           : 1;
  k_process_cell_leakage_power  : 0;
  k_process_cell_rise           : 1;
  k_process_fall_transition     : 1;
  k_process_hold_fall           : 1;
  k_process_hold_rise           : 1;
  k_process_internal_power      : 0;
  k_process_min_pulse_width_high : 1;
  k_process_min_pulse_width_low : 1;
  k_process_pin_cap             : 0;
  k_process_recovery_fall       : 1;
  k_process_recovery_rise       : 1;
  k_process_rise_transition     : 1;
  k_process_setup_fall          : 1;
  k_process_setup_rise          : 1;
  k_process_wire_cap            : 0;
  k_process_wire_res            : 0;
  k_temp_cell_fall              : 0.000;
  k_temp_cell_rise              : 0.000;
  k_temp_hold_fall              : 0.000;
  k_temp_hold_rise              : 0.000;
  k_temp_min_pulse_width_high   : 0.000;
  k_temp_min_pulse_width_low    : 0.000;
  k_temp_min_period             : 0.000;
  k_temp_rise_propagation       : 0.000;
  k_temp_fall_propagation       : 0.000;
  k_temp_rise_transition        : 0.0;
  k_temp_fall_transition        : 0.0;
  k_temp_recovery_fall          : 0.000;
  k_temp_recovery_rise          : 0.000;
  k_temp_setup_fall             : 0.000;
  k_temp_setup_rise             : 0.000;
  k_volt_cell_fall              : 0.000;
  k_volt_cell_rise              : 0.000;
  k_volt_hold_fall              : 0.000;
  k_volt_hold_rise              : 0.000;
  k_volt_min_pulse_width_high   : 0.000;
  k_volt_min_pulse_width_low    : 0.000;
  k_volt_min_period             : 0.000;
  k_volt_rise_propagation       : 0.000;
  k_volt_fall_propagation       : 0.000;
  k_volt_rise_transition        : 0.0;
  k_volt_fall_transition        : 0.0;
  k_volt_recovery_fall          : 0.000;
  k_volt_recovery_rise          : 0.000;
  k_volt_setup_fall             : 0.000;
  k_volt_setup_rise             : 0.000;


  voltage_map (VDDPE, 0.9);
  voltage_map (VDDCE, 0.9);
  voltage_map (VSSE, 0);

  operating_conditions(ss_0p9v_125c) {
    process      : 1;
    temperature  : 125.000;
    voltage      : 0.900;
    tree_type    : balanced_tree;
  }
  default_operating_conditions : ss_0p9v_125c;
  wire_load("sample") {
    resistance   : 1.6e-05;
    capacitance  : 0.0002;
    area         : 1.7;
    slope        : 500;
    fanout_length(1,500);
  }
  lu_table_template(off_32x8b_bist_mux_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_mux_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_mem_out_delay_template) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_bist_mux_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_mem_out_slew_template) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_clk_setup_constraint_template) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  lu_table_template(off_32x8b_constraint_template) {
     variable_1 : related_pin_transition;
     variable_2 : constrained_pin_transition;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_clkslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_sigslew_load) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
    index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_load) {
    variable_1 : total_output_net_capacitance;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_clkslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  power_lut_template(off_32x8b_energy_template_sigslew) {
    variable_1 : input_transition_time;
    index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
  }
  library_features(report_delay_calculation);
  type (off_32x8b_DATA) {
    base_type : array ;
    data_type : bit ;
    bit_width : 8;
    bit_from : 7;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_32x8b_UPM) {
    base_type : array ;
    data_type : bit ;
    bit_width : 3;
    bit_from : 2;
    bit_to : 0 ;
    downto : true ;
  }
  type (off_32x8b_ADDRESS) {
    base_type : array ;
    data_type : bit ;
    bit_width : 5;
    bit_from : 4;
    bit_to : 0 ;
    downto : true ;
  }
  cell(off_32x8b) {
    area : 6856.473000;
    dont_use : TRUE;
    dont_touch : TRUE;
    interface_timing : TRUE;
    power_gating_cell : "mtcmos";
    pg_pin(VDDCE) {
      voltage_name : VDDCE;
      pg_type : primary_power;
    }
    pg_pin(VDDPE) {
      voltage_name : VDDPE;
      pg_type : primary_power;
    }
    pg_pin(VSSE) {
      voltage_name : VSSE;
      pg_type : primary_ground;
    }
    memory() {
      type : ram;
      address_width : 5;
      word_width : 8;
    }
    bus(Q) {
      bus_type : off_32x8b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : output;
      max_capacitance : 0.360000;
      memory_read() {
        address : A;
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.697012, 0.706044, 0.715898, 0.735605, 0.794727, 0.893263, 0.991799", \
              "0.697833, 0.706865, 0.716719, 0.736426, 0.795548, 0.894084, 0.992620", \
              "0.699475, 0.708508, 0.718361, 0.738068, 0.797190, 0.895726, 0.994262", \
              "0.701939, 0.710971, 0.720825, 0.740532, 0.799654, 0.898190, 0.996726", \
              "0.709330, 0.718362, 0.728216, 0.747923, 0.807045, 0.905581, 1.004117", \
              "0.729860, 0.738892, 0.748746, 0.768453, 0.827575, 0.926111, 1.024647", \
              "0.771741, 0.780773, 0.790627, 0.810334, 0.869456, 0.967992, 1.066528" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.720992, 0.729719, 0.739240, 0.758282, 0.815408, 0.910618, 1.005829", \
              "0.721813, 0.730540, 0.740061, 0.759103, 0.816230, 0.911440, 1.006650", \
              "0.723455, 0.732183, 0.741704, 0.760746, 0.817872, 0.913082, 1.008292", \
              "0.725919, 0.734646, 0.744167, 0.763209, 0.820336, 0.915546, 1.010756", \
              "0.733310, 0.742037, 0.751558, 0.770600, 0.827726, 0.922936, 1.018147", \
              "0.753840, 0.762567, 0.772088, 0.791130, 0.848256, 0.943466, 1.038677", \
              "0.795721, 0.804448, 0.813969, 0.833011, 0.890138, 0.985348, 1.080558" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.778549, 0.787582, 0.797435, 0.817142, 0.876264, 0.974800, 1.073336", \
              "0.779370, 0.788403, 0.798256, 0.817964, 0.877085, 0.975621, 1.074157", \
              "0.781013, 0.790045, 0.799899, 0.819606, 0.878728, 0.977264, 1.075800", \
              "0.783476, 0.792509, 0.802362, 0.822070, 0.881191, 0.979727, 1.078263", \
              "0.790867, 0.799900, 0.809753, 0.829460, 0.888582, 0.987118, 1.085654", \
              "0.811397, 0.820430, 0.830283, 0.849990, 0.909112, 1.007648, 1.106184", \
              "0.853278, 0.862311, 0.872164, 0.891872, 0.950993, 1.049529, 1.148065" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.802529, 0.811257, 0.820778, 0.839820, 0.896946, 0.992156, 1.087366", \
              "0.803350, 0.812078, 0.821599, 0.840641, 0.897767, 0.992977, 1.088187", \
              "0.804993, 0.813720, 0.823241, 0.842283, 0.899409, 0.994620, 1.089830", \
              "0.807456, 0.816184, 0.825705, 0.844747, 0.901873, 0.997083, 1.092293", \
              "0.814847, 0.823575, 0.833096, 0.852138, 0.909264, 1.004474, 1.099684", \
              "0.835377, 0.844105, 0.853626, 0.872668, 0.929794, 1.025004, 1.120214", \
              "0.877258, 0.885986, 0.895507, 0.914549, 0.971675, 1.066885, 1.162095" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.972743, 0.981775, 0.991629, 1.011336, 1.070457, 1.168993, 1.267530", \
              "0.973564, 0.982596, 0.992450, 1.012157, 1.071279, 1.169815, 1.268351", \
              "0.975206, 0.984239, 0.994092, 1.013799, 1.072921, 1.171457, 1.269993", \
              "0.977670, 0.986702, 0.996556, 1.016263, 1.075385, 1.173921, 1.272457", \
              "0.985061, 0.994093, 1.003947, 1.023654, 1.082775, 1.181312, 1.279848", \
              "1.005591, 1.014623, 1.024477, 1.044184, 1.103305, 1.201842, 1.300378", \
              "1.047472, 1.056504, 1.066358, 1.086065, 1.145187, 1.243723, 1.342259" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.996723, 1.005450, 1.014971, 1.034013, 1.091139, 1.186349, 1.281559", \
              "0.997544, 1.006271, 1.015792, 1.034834, 1.091960, 1.187171, 1.282381", \
              "0.999186, 1.007914, 1.017435, 1.036477, 1.093603, 1.188813, 1.284023", \
              "1.001650, 1.010377, 1.019898, 1.038940, 1.096066, 1.191277, 1.286487", \
              "1.009041, 1.017768, 1.027289, 1.046331, 1.103457, 1.198667, 1.293877", \
              "1.029571, 1.038298, 1.047819, 1.066861, 1.123987, 1.219197, 1.314407", \
              "1.071452, 1.080179, 1.089700, 1.108742, 1.165868, 1.261079, 1.356289" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b0 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "1.081171, 1.090204, 1.100057, 1.119765, 1.178886, 1.277422, 1.375958", \
              "1.081992, 1.091025, 1.100879, 1.120586, 1.179707, 1.278243, 1.376780", \
              "1.083635, 1.092667, 1.102521, 1.122228, 1.181350, 1.279886, 1.378422", \
              "1.086098, 1.095131, 1.104985, 1.124692, 1.183813, 1.282349, 1.380886", \
              "1.093489, 1.102522, 1.112375, 1.132083, 1.191204, 1.289740, 1.388276", \
              "1.114019, 1.123052, 1.132905, 1.152613, 1.211734, 1.310270, 1.408806", \
              "1.155901, 1.164933, 1.174787, 1.194494, 1.253615, 1.352152, 1.450688" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "1.105151, 1.113879, 1.123400, 1.142442, 1.199568, 1.294778, 1.389988", \
              "1.105973, 1.114700, 1.124221, 1.143263, 1.200389, 1.295599, 1.390809", \
              "1.107615, 1.116342, 1.125864, 1.144906, 1.202032, 1.297242, 1.392452", \
              "1.110079, 1.118806, 1.128327, 1.147369, 1.204495, 1.299705, 1.394915", \
              "1.117469, 1.126197, 1.135718, 1.154760, 1.211886, 1.307096, 1.402306", \
              "1.137999, 1.146727, 1.156248, 1.175290, 1.232416, 1.327626, 1.422836", \
              "1.179881, 1.188608, 1.198129, 1.217171, 1.274297, 1.369507, 1.464717" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b0 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b0";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "CLK" ;
        timing_type : rising_edge;
        timing_sense : non_unate;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA[2]== 1'b1 && EMA[1]== 1'b1 && EMA[0]== 1'b1";
          cell_rise(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          rise_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.032872, 0.056758, 0.082817, 0.134933, 0.291283, 0.551866, 0.812449");
          }
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000", \
              "999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000, 999.000000" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      timing() {
        related_pin : "RETN" ;
        timing_type  : clear;
        timing_sense : positive_unate;
          cell_fall(off_32x8b_mem_out_delay_template) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            index_2 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ( \
              "0.250546, 0.259578, 0.269432, 0.289139, 0.348261, 0.446797, 0.545333", \
              "0.250963, 0.259995, 0.269849, 0.289556, 0.348678, 0.447214, 0.545750", \
              "0.251797, 0.260829, 0.270683, 0.290390, 0.349512, 0.448048, 0.546584", \
              "0.253047, 0.262080, 0.271933, 0.291641, 0.350762, 0.449298, 0.547834", \
              "0.256800, 0.265832, 0.275686, 0.295393, 0.354515, 0.453051, 0.551587", \
              "0.267223, 0.276256, 0.286109, 0.305816, 0.364938, 0.463474, 0.562010", \
              "0.288487, 0.297519, 0.307373, 0.327080, 0.386202, 0.484738, 0.583274" \
            );
          }
          fall_transition(off_32x8b_mem_out_slew_template) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.028670, 0.049734, 0.072714, 0.118673, 0.256550, 0.486345, 0.716140");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
      when : "RETN" ;
          rise_power(off_32x8b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.007470, 0.014887, 0.022979, 0.039162, 0.087712, 0.168628, 0.249545");
          }
          fall_power(off_32x8b_energy_template_load) {
            index_1 ("0.001, 0.012, 0.024, 0.048, 0.120, 0.240, 0.360");
            values ("0.009097, 0.009156, 0.009222, 0.009352, 0.009744, 0.010396, 0.011049");
          }
      }
    }
    pin(CLK) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.012040;
      clock : true;
      max_transition : 1.000;
      min_pulse_width_high : 0.057 ;
      min_pulse_width_low : 0.175 ;
      min_period : 1.389 ;
      minimum_period() {
        constraint : 0.668 ;
        when : "(!EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 0.775 ;
        when : "(!EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 1.235 ;
        when : "(!EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 1.389 ;
        when : "(!EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq0andEMA1eq1andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.000 ;
        when : "(EMA[2]) & (!EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.001 ;
        when : "(EMA[2]) & (!EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq0andEMA0eq1";
      }
      minimum_period() {
        constraint : 999.002 ;
        when : "(EMA[2]) & (EMA[1]) & (!EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq0";
      }
      minimum_period() {
        constraint : 999.003 ;
        when : "(EMA[2]) & (EMA[1]) & (EMA[0])";
        sdf_cond : "EMA2eq1andEMA1eq1andEMA0eq1";
      }

      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.547555, 1.547555, 1.547555, 1.547555, 1.547555, 1.547555, 1.547555");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021706, 0.021706, 0.021706, 0.021706, 0.021706, 0.021706, 0.021706");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.467374, 1.467374, 1.467374, 1.467374, 1.467374, 1.467374, 1.467374");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022831, 0.022831, 0.022831, 0.022831, 0.022831, 0.022831, 0.022831");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.567616, 1.567616, 1.567616, 1.567616, 1.567616, 1.567616, 1.567616");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022155, 0.022155, 0.022155, 0.022155, 0.022155, 0.022155, 0.022155");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.556000, 1.556000, 1.556000, 1.556000, 1.556000, 1.556000, 1.556000");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021976, 0.021976, 0.021976, 0.021976, 0.021976, 0.021976, 0.021976");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.487309, 1.487309, 1.487309, 1.487309, 1.487309, 1.487309, 1.487309");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021412, 0.021412, 0.021412, 0.021412, 0.021412, 0.021412, 0.021412");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.520752, 1.520752, 1.520752, 1.520752, 1.520752, 1.520752, 1.520752");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021216, 0.021216, 0.021216, 0.021216, 0.021216, 0.021216, 0.021216");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.493137, 1.493137, 1.493137, 1.493137, 1.493137, 1.493137, 1.493137");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021729, 0.021729, 0.021729, 0.021729, 0.021729, 0.021729, 0.021729");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & ! \
                  (WEN) \
                   ) \
                  & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.503501, 1.503501, 1.503501, 1.503501, 1.503501, 1.503501, 1.503501");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021681, 0.021681, 0.021681, 0.021681, 0.021681, 0.021681, 0.021681");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.358978, 1.358978, 1.358978, 1.358978, 1.358978, 1.358978, 1.358978");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020855, 0.020855, 0.020855, 0.020855, 0.020855, 0.020855, 0.020855");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.428476, 1.428476, 1.428476, 1.428476, 1.428476, 1.428476, 1.428476");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.022200, 0.022200, 0.022200, 0.022200, 0.022200, 0.022200, 0.022200");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.437646, 1.437646, 1.437646, 1.437646, 1.437646, 1.437646, 1.437646");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.021199, 0.021199, 0.021199, 0.021199, 0.021199, 0.021199, 0.021199");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (!EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.443052, 1.443052, 1.443052, 1.443052, 1.443052, 1.443052, 1.443052");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020908, 0.020908, 0.020908, 0.020908, 0.020908, 0.020908, 0.020908");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.469606, 1.469606, 1.469606, 1.469606, 1.469606, 1.469606, 1.469606");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020630, 0.020630, 0.020630, 0.020630, 0.020630, 0.020630, 0.020630");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (!EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.499926, 1.499926, 1.499926, 1.499926, 1.499926, 1.499926, 1.499926");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020668, 0.020668, 0.020668, 0.020668, 0.020668, 0.020668, 0.020668");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (!EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.442876, 1.442876, 1.442876, 1.442876, 1.442876, 1.442876, 1.442876");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020619, 0.020619, 0.020619, 0.020619, 0.020619, 0.020619, 0.020619");
          }
      }
      internal_power() {
        related_pg_pin : "VDDCE";
        when : "RETN & (!CEN & \
                                 (WEN) \
                  ) \
                   & (EMA[2]) & (EMA[1]) & (EMA[0])";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("1.524134, 1.524134, 1.524134, 1.524134, 1.524134, 1.524134, 1.524134");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.020742, 0.020742, 0.020742, 0.020742, 0.020742, 0.020742, 0.020742");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (CEN)";
          rise_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.004388, 0.004388, 0.004388, 0.004388, 0.004388, 0.004388, 0.004388");
          }
          fall_power(off_32x8b_energy_template_clkslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.016828, 0.016828, 0.016828, 0.016828, 0.016828, 0.016828, 0.016828");
          }
      }
    }

    pin(CEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.006281;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.048865, 0.049651, 0.051223, 0.053580, 0.060653, 0.080299, 0.120376", \
          "0.048044, 0.048830, 0.050402, 0.052759, 0.059832, 0.079477, 0.119555", \
          "0.046402, 0.047188, 0.048759, 0.051117, 0.058189, 0.077835, 0.117912", \
          "0.043938, 0.044724, 0.046296, 0.048653, 0.055726, 0.075371, 0.115449", \
          "0.036547, 0.037333, 0.038905, 0.041262, 0.048335, 0.067981, 0.108058", \
          "0.016017, 0.016803, 0.018375, 0.020732, 0.027805, 0.047451, 0.087528", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.005569, 0.045647" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.127262, 0.127821, 0.128939, 0.130615, 0.135643, 0.149612, 0.178107", \
          "0.126441, 0.127000, 0.128117, 0.129794, 0.134822, 0.148790, 0.177286", \
          "0.124799, 0.125358, 0.126475, 0.128151, 0.133180, 0.147148, 0.175643", \
          "0.122335, 0.122894, 0.124011, 0.125688, 0.130716, 0.144684, 0.173180", \
          "0.114944, 0.115503, 0.116621, 0.118297, 0.123325, 0.137294, 0.165789", \
          "0.094414, 0.094973, 0.096091, 0.097767, 0.102795, 0.116764, 0.145259", \
          "0.052533, 0.053092, 0.054209, 0.055886, 0.060914, 0.074882, 0.103378" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.006334, 0.005548, 0.003976, 0.001619, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000846, 0.000287, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.042727, 0.042168, 0.041051, 0.039374, 0.034346, 0.020378, 0.000000" \
        );
        }
      }
/* RETN(R) to CEN(F) HD */
        timing() {
          related_pin : "RETN";
          timing_type : non_seq_hold_rising;
          fall_constraint(off_32x8b_constraint_template) {
          index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
          index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
          values ( \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205", \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205", \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205", \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205", \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205", \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205", \
            "0.364802, 0.364564, 0.364090, 0.363378, 0.361242, 0.355308, 0.343205" \
          );
          }
        }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.006163, 0.006185, 0.006230, 0.006297, 0.006498, 0.007056, 0.008195");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.009653, 0.009666, 0.009692, 0.009732, 0.009851, 0.010181, 0.010855");
          }
      }
    }
    pin(WEN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.011400;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.130425, 0.131323, 0.133119, 0.135812, 0.143893, 0.166340, 0.212132", \
          "0.129604, 0.130502, 0.132298, 0.134991, 0.143072, 0.165519, 0.211310", \
          "0.127962, 0.128859, 0.130655, 0.133349, 0.141430, 0.163877, 0.209668", \
          "0.125498, 0.126396, 0.128192, 0.130885, 0.138966, 0.161413, 0.207204", \
          "0.118107, 0.119005, 0.120801, 0.123494, 0.131575, 0.154022, 0.199814", \
          "0.097577, 0.098475, 0.100271, 0.102964, 0.111045, 0.133492, 0.179284", \
          "0.055696, 0.056594, 0.058390, 0.061083, 0.069164, 0.091611, 0.137402" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.154125, 0.154935, 0.156556, 0.158986, 0.166279, 0.186536, 0.227860", \
          "0.153304, 0.154114, 0.155734, 0.158165, 0.165458, 0.185715, 0.227039", \
          "0.151661, 0.152471, 0.154092, 0.156523, 0.163815, 0.184072, 0.225397", \
          "0.149198, 0.150008, 0.151628, 0.154059, 0.161352, 0.181609, 0.222933", \
          "0.141807, 0.142617, 0.144238, 0.146668, 0.153961, 0.174218, 0.215542", \
          "0.121277, 0.122087, 0.123708, 0.126138, 0.133431, 0.153688, 0.195012", \
          "0.079395, 0.080206, 0.081826, 0.084257, 0.091550, 0.111807, 0.153131" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.022367, 0.021469, 0.019673, 0.016980, 0.008899, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.001388, 0.000578, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.043269, 0.042459, 0.040839, 0.038408, 0.031115, 0.010858, 0.000000" \
        );
        }
      }
      internal_power() {
      related_pg_pin : "VDDPE";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.102249, 0.102229, 0.102189, 0.102129, 0.101950, 0.101453, 0.100439");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.160031, 0.160049, 0.160085, 0.160139, 0.160301, 0.160752, 0.161670");
          }
      }
     }
    bus(A) {
      bus_type : off_32x8b_ADDRESS;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.004097;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.206478, 0.207349, 0.209091, 0.211703, 0.219542, 0.241316, 0.285734", \
          "0.205657, 0.206528, 0.208269, 0.210882, 0.218721, 0.240494, 0.284913", \
          "0.204014, 0.204885, 0.206627, 0.209240, 0.217078, 0.238852, 0.283270", \
          "0.201551, 0.202422, 0.204163, 0.206776, 0.214615, 0.236388, 0.280807", \
          "0.194160, 0.195031, 0.196773, 0.199385, 0.207224, 0.228998, 0.273416", \
          "0.173630, 0.174501, 0.176243, 0.178855, 0.186694, 0.208468, 0.252886", \
          "0.131749, 0.132620, 0.134361, 0.136974, 0.144813, 0.166586, 0.211004" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.199810, 0.201193, 0.203959, 0.208107, 0.220553, 0.255123, 0.325646", \
          "0.198989, 0.200372, 0.203138, 0.207286, 0.219731, 0.254302, 0.324825", \
          "0.197347, 0.198730, 0.201495, 0.205644, 0.218089, 0.252659, 0.323183", \
          "0.194883, 0.196266, 0.199032, 0.203180, 0.215625, 0.250196, 0.320719", \
          "0.187492, 0.188875, 0.191641, 0.195789, 0.208235, 0.242805, 0.313328", \
          "0.166962, 0.168345, 0.171111, 0.175259, 0.187705, 0.222275, 0.292798", \
          "0.125081, 0.126464, 0.129230, 0.133378, 0.145823, 0.180394, 0.250917" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.001633, 0.000762, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.004097, 0.003226, 0.001484, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.011488, 0.010617, 0.008875, 0.006262, 0.000000, 0.000000, 0.000000", \
          "0.032018, 0.031147, 0.029405, 0.026792, 0.018953, 0.000000, 0.000000", \
          "0.073899, 0.073028, 0.071286, 0.068673, 0.060835, 0.039061, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000503, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.002145, 0.000762, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.004609, 0.003226, 0.000460, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.011999, 0.010617, 0.007851, 0.003703, 0.000000, 0.000000, 0.000000", \
          "0.032529, 0.031147, 0.028381, 0.024233, 0.011787, 0.000000, 0.000000", \
          "0.074411, 0.073028, 0.070262, 0.066114, 0.053668, 0.019098, 0.000000" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.049413, 0.049401, 0.049378, 0.049342, 0.049236, 0.048942, 0.048342");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.044471, 0.044533, 0.044657, 0.044843, 0.045399, 0.046945, 0.050098");
          }
      }
    }
    bus(D) {
      bus_type : off_32x8b_DATA;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      memory_write() {
        address : A;
        clocked_on : "CLK";
      }
      direction : input;
      capacitance : 0.007398;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.040558", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.039737", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.038094", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.035631", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.028240", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.007710", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.015668", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.014847", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.013205", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.010741", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.003350", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.093356, 0.092132, 0.089682, 0.086008, 0.074985, 0.044367, 0.000000", \
          "0.094178, 0.092953, 0.090503, 0.086829, 0.075807, 0.045189, 0.000000", \
          "0.095820, 0.094595, 0.092146, 0.088472, 0.077449, 0.046831, 0.000000", \
          "0.098284, 0.097059, 0.094609, 0.090935, 0.079913, 0.049295, 0.000000", \
          "0.105674, 0.104450, 0.102000, 0.098326, 0.087303, 0.056685, 0.000000", \
          "0.126204, 0.124980, 0.122530, 0.118856, 0.107834, 0.077215, 0.014754", \
          "0.168086, 0.166861, 0.164411, 0.160737, 0.149715, 0.119097, 0.056636" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.073319, 0.072602, 0.071169, 0.069018, 0.062568, 0.044650, 0.008097", \
          "0.074140, 0.073423, 0.071990, 0.069840, 0.063389, 0.045471, 0.008918", \
          "0.075782, 0.075066, 0.073632, 0.071482, 0.065031, 0.047113, 0.010561", \
          "0.078246, 0.077529, 0.076096, 0.073946, 0.067495, 0.049577, 0.013024", \
          "0.085637, 0.084920, 0.083487, 0.081336, 0.074886, 0.056968, 0.020415", \
          "0.106167, 0.105450, 0.104017, 0.101866, 0.095416, 0.077498, 0.040945", \
          "0.148048, 0.147331, 0.145898, 0.143748, 0.137297, 0.119379, 0.082826" \
        );
        }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & (! \
                   (WEN) \
                   )";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.007041, 0.007050, 0.007068, 0.007096, 0.007178, 0.007405, 0.007870");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.016610, 0.016654, 0.016742, 0.016873, 0.017266, 0.018358, 0.020587");
          }
      }
      internal_power() {
        related_pg_pin : "VDDPE";
        when : "RETN & ( \
                   (WEN) \
                   )";
          rise_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.000998, 0.000988, 0.000968, 0.000939, 0.000849, 0.000600, 0.000135");
          }
          fall_power(off_32x8b_energy_template_sigslew) {
            index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
            values ("0.002070, 0.002114, 0.002201, 0.002332, 0.002725, 0.003818, 0.006046");
          }
       }
    }
    bus(EMA) {
      bus_type : off_32x8b_UPM;
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      direction : input;
      capacitance : 0.007751;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200", \
          "0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200, 0.668200" \
        );
        }
      }
    }
    pin(RETN) {
      related_power_pin : "VDDPE";
      related_ground_pin : "VSSE";
      power_gating_pin (power_pin_1, "0");
      direction : input;
      capacitance : 0.008717;
      timing() {
        related_pin : CLK;
        timing_type : setup_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.048544, 0.049651, 0.051866, 0.055187, 0.065152, 0.092833, 0.149302", \
          "0.047723, 0.048830, 0.051044, 0.054366, 0.064331, 0.092012, 0.148481", \
          "0.046080, 0.047188, 0.049402, 0.052724, 0.062689, 0.090370, 0.146838", \
          "0.043617, 0.044724, 0.046938, 0.050260, 0.060225, 0.087906, 0.144375", \
          "0.036226, 0.037333, 0.039548, 0.042869, 0.052834, 0.080515, 0.136984", \
          "0.015696, 0.016803, 0.019018, 0.022339, 0.032304, 0.059985, 0.116454", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.018104, 0.074573" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.126846, 0.127821, 0.129773, 0.132700, 0.141480, 0.165872, 0.215631", \
          "0.126024, 0.127000, 0.128951, 0.131878, 0.140659, 0.165051, 0.214810", \
          "0.124382, 0.125358, 0.127309, 0.130236, 0.139017, 0.163408, 0.213167", \
          "0.121918, 0.122894, 0.124845, 0.127772, 0.136553, 0.160945, 0.210704", \
          "0.114528, 0.115503, 0.117455, 0.120382, 0.129162, 0.153554, 0.203313", \
          "0.093998, 0.094973, 0.096925, 0.099851, 0.108632, 0.133024, 0.182783", \
          "0.052116, 0.053092, 0.055043, 0.057970, 0.066751, 0.091143, 0.140902" \
        );
        }
      }
      timing() {
        related_pin : CLK;
        timing_type : hold_rising ;
        rise_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.006012, 0.005548, 0.004619, 0.003226, 0.000000, 0.000000, 0.000000" \
        );
        }
        fall_constraint(off_32x8b_constraint_template) {
        index_1 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        index_2 ("0.090, 0.100, 0.120, 0.150, 0.240, 0.490, 1.000");
        values ( \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.000429, 0.000287, 0.000003, 0.000000, 0.000000, 0.000000, 0.000000", \
          "0.042310, 0.042168, 0.041884, 0.041459, 0.040183, 0.036638, 0.029406" \
        );
        }
      }
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      when :"!RETN";
      value : 0.000e+00;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      when :"!RETN";
      value : 9.987e-03;
    }
    leakage_power() {
      related_pg_pin : "VDDPE";
      value : 0.020246;
    }
    leakage_power() {
      related_pg_pin : "VDDCE";
      value : 9.987e-03;
    }
  }
}
